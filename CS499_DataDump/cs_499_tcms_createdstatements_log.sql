CREATE DATABASE  IF NOT EXISTS `cs_499_tcms` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `cs_499_tcms`;
-- MySQL dump 10.13  Distrib 5.7.17, for Win64 (x86_64)
--
-- Host: localhost    Database: cs_499_tcms
-- ------------------------------------------------------
-- Server version	5.7.17-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `createdstatements_log`
--

DROP TABLE IF EXISTS `createdstatements_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `createdstatements_log` (
  `ID` bigint(20) DEFAULT NULL,
  `Code` varchar(4000) DEFAULT NULL,
  `ModifiedStatus` varchar(1) DEFAULT NULL,
  `DeletedDate` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `DeletedBy` varchar(20) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `createdstatements_log`
--

LOCK TABLES `createdstatements_log` WRITE;
/*!40000 ALTER TABLE `createdstatements_log` DISABLE KEYS */;
INSERT INTO `createdstatements_log` VALUES (157,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bd; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bd` BEFORE DELETE ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \nINSERT INTO businesspartners_log \n( \nCompanyID,\nCompanyName,\nAddress,\nCity,\nState,\nZipCode,\nPhoneNumber,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.CompanyID,\nOLD.CompanyName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.PhoneNumber,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(158,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bi; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bi` BEFORE INSERT ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-20 23:42:17',NULL),(159,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bu; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bu` BEFORE UPDATE ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO businesspartners_log \n( \nCompanyID,\nCompanyName,\nAddress,\nCity,\nState,\nZipCode,\nPhoneNumber,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.CompanyID,\nOLD.CompanyName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.PhoneNumber,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(160,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bd; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bd` BEFORE DELETE ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \nINSERT INTO createdstatements_log \n( \nID,\nCode,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ID,\nOLD.Code,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(161,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bi; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bi` BEFORE INSERT ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-20 23:42:17',NULL),(162,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bu; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bu` BEFORE UPDATE ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO createdstatements_log \n( \nID,\nCode,\nModifiedStatus \n) \nVALUES \n( \nOLD.ID,\nOLD.Code,\n\'U\'\n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(163,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bd` BEFORE DELETE ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \nINSERT INTO maintenancepart_log \n( \nMaintenancePartID,\nQuantity,\nMaintenanceRecordID,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.MaintenancePartID,\nOLD.Quantity,\nOLD.MaintenanceRecordID,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(164,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bi` BEFORE INSERT ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-20 23:42:17',NULL),(165,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bu` BEFORE UPDATE ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancepart_log \n( \nMaintenancePartID,\nQuantity,\nMaintenanceRecordID,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.MaintenancePartID,\nOLD.Quantity,\nOLD.MaintenanceRecordID,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(166,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bd` BEFORE DELETE ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \nINSERT INTO maintenancerecord_log \n( \nMaintenanceID,\nVehicleID,\nMaintenanceDate,\nMaintenanceDescription,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.MaintenanceID,\nOLD.VehicleID,\nOLD.MaintenanceDate,\nOLD.MaintenanceDescription,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(167,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bi` BEFORE INSERT ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-20 23:42:17',NULL),(168,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bu` BEFORE UPDATE ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancerecord_log \n( \nMaintenanceID,\nVehicleID,\nMaintenanceDate,\nMaintenanceDescription,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.MaintenanceID,\nOLD.VehicleID,\nOLD.MaintenanceDate,\nOLD.MaintenanceDescription,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(169,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bd` BEFORE DELETE ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \nINSERT INTO maintenancerecorddetails_log \n( \nDetailID,\nMaintenanceID,\nEmployeeID,\nRepairDescription,\nRepairDate,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.DetailID,\nOLD.MaintenanceID,\nOLD.EmployeeID,\nOLD.RepairDescription,\nOLD.RepairDate,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(170,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bi` BEFORE INSERT ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-20 23:42:17',NULL),(171,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bu` BEFORE UPDATE ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancerecorddetails_log \n( \nDetailID,\nMaintenanceID,\nEmployeeID,\nRepairDescription,\nRepairDate,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.DetailID,\nOLD.MaintenanceID,\nOLD.EmployeeID,\nOLD.RepairDescription,\nOLD.RepairDate,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(172,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bd; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bd` BEFORE DELETE ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \nINSERT INTO manifest_log \n( \nManifestID,\nShipmentType,\nVehicleID,\nDepartureTime,\nETA,\nArrived,\nShippingCost,\nEmployeeID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ManifestID,\nOLD.ShipmentType,\nOLD.VehicleID,\nOLD.DepartureTime,\nOLD.ETA,\nOLD.Arrived,\nOLD.ShippingCost,\nOLD.EmployeeID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(173,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bi; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bi` BEFORE INSERT ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-20 23:42:17',NULL),(174,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bu; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bu` BEFORE UPDATE ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO manifest_log \n( \nManifestID,\nShipmentType,\nVehicleID,\nDepartureTime,\nETA,\nArrived,\nShippingCost,\nEmployeeID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.ManifestID,\nOLD.ShipmentType,\nOLD.VehicleID,\nOLD.DepartureTime,\nOLD.ETA,\nOLD.Arrived,\nOLD.ShippingCost,\nOLD.EmployeeID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(175,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bd; \nCREATE TRIGGER `cs_499_tcms`.`parts_bd` BEFORE DELETE ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \nINSERT INTO parts_log \n( \nPartID,\nPartDescription,\nPartNumber,\nPartPrice,\nPartWeight,\nQuantityInStock,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.PartID,\nOLD.PartDescription,\nOLD.PartNumber,\nOLD.PartPrice,\nOLD.PartWeight,\nOLD.QuantityInStock,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(176,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bi; \nCREATE TRIGGER `cs_499_tcms`.`parts_bi` BEFORE INSERT ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-20 23:42:17',NULL),(177,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bu; \nCREATE TRIGGER `cs_499_tcms`.`parts_bu` BEFORE UPDATE ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO parts_log \n( \nPartID,\nPartDescription,\nPartNumber,\nPartPrice,\nPartWeight,\nQuantityInStock,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.PartID,\nOLD.PartDescription,\nOLD.PartNumber,\nOLD.PartPrice,\nOLD.PartWeight,\nOLD.QuantityInStock,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(178,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bd; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bd` BEFORE DELETE ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \nINSERT INTO payroll_log \n( \nPayrollID,\nEmployeeID,\nPaymentDate,\nPayment,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.PayrollID,\nOLD.EmployeeID,\nOLD.PaymentDate,\nOLD.Payment,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(179,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bi; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bi` BEFORE INSERT ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-20 23:42:17',NULL),(180,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bu; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bu` BEFORE UPDATE ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO payroll_log \n( \nPayrollID,\nEmployeeID,\nPaymentDate,\nPayment,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.PayrollID,\nOLD.EmployeeID,\nOLD.PaymentDate,\nOLD.Payment,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(181,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bd; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bd` BEFORE DELETE ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \nINSERT INTO purchaseitems_log \n( \nItemID,\nOrderID,\nQuantity,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ItemID,\nOLD.OrderID,\nOLD.Quantity,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(182,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bi; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bi` BEFORE INSERT ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-20 23:42:17',NULL),(183,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bu; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bu` BEFORE UPDATE ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO purchaseitems_log \n( \nItemID,\nOrderID,\nQuantity,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.ItemID,\nOLD.OrderID,\nOLD.Quantity,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(184,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bd; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bd` BEFORE DELETE ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \nINSERT INTO purchaseorder_log \n( \nOrderID,\nOrderNumber,\nSourceID,\nDestinationID,\nManifestID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.OrderID,\nOLD.OrderNumber,\nOLD.SourceID,\nOLD.DestinationID,\nOLD.ManifestID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(185,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bi; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bi` BEFORE INSERT ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-20 23:42:17',NULL),(186,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bu; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bu` BEFORE UPDATE ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO purchaseorder_log \n( \nOrderID,\nOrderNumber,\nSourceID,\nDestinationID,\nManifestID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.OrderID,\nOLD.OrderNumber,\nOLD.SourceID,\nOLD.DestinationID,\nOLD.ManifestID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(187,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bd; \nCREATE TRIGGER `cs_499_tcms`.`user_bd` BEFORE DELETE ON cs_499_tcms.user FOR EACH ROW \nBEGIN \nINSERT INTO user_log \n( \nEmployeeID,\nUserName,\nFirstName,\nMiddleName,\nLastName,\nAddress,\nCity,\nState,\nZipCode,\nHomePhone,\nCellPhone,\nEmailAddress,\nPayRate,\nEmploymentDate,\nJobID,\nHomeStore,\nJobDescription,\nIsActive,\nHashKey,\nPassphrase,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.EmployeeID,\nOLD.UserName,\nOLD.FirstName,\nOLD.MiddleName,\nOLD.LastName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.HomePhone,\nOLD.CellPhone,\nOLD.EmailAddress,\nOLD.PayRate,\nOLD.EmploymentDate,\nOLD.JobID,\nOLD.HomeStore,\nOLD.JobDescription,\nOLD.IsActive,\nOLD.HashKey,\nOLD.Passphrase,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(188,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bi; \nCREATE TRIGGER `cs_499_tcms`.`user_bi` BEFORE INSERT ON cs_499_tcms.user FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-20 23:42:17',NULL),(189,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bu; \nCREATE TRIGGER `cs_499_tcms`.`user_bu` BEFORE UPDATE ON cs_499_tcms.user FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO user_log \n( \nEmployeeID,\nUserName,\nFirstName,\nMiddleName,\nLastName,\nAddress,\nCity,\nState,\nZipCode,\nHomePhone,\nCellPhone,\nEmailAddress,\nPayRate,\nEmploymentDate,\nJobID,\nHomeStore,\nJobDescription,\nIsActive,\nHashKey,\nPassphrase,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.EmployeeID,\nOLD.UserName,\nOLD.FirstName,\nOLD.MiddleName,\nOLD.LastName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.HomePhone,\nOLD.CellPhone,\nOLD.EmailAddress,\nOLD.PayRate,\nOLD.EmploymentDate,\nOLD.JobID,\nOLD.HomeStore,\nOLD.JobDescription,\nOLD.IsActive,\nOLD.HashKey,\nOLD.Passphrase,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(190,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bd; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bd` BEFORE DELETE ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \nINSERT INTO vehicle_log \n( \nVehicleID,\nBrand,\nYear,\nModel,\nVehicleType,\nCapacity,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.VehicleID,\nOLD.Brand,\nOLD.Year,\nOLD.Model,\nOLD.VehicleType,\nOLD.Capacity,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(191,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bi; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bi` BEFORE INSERT ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-20 23:42:17',NULL),(192,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bu; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bu` BEFORE UPDATE ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO vehicle_log \n( \nVehicleID,\nBrand,\nYear,\nModel,\nVehicleType,\nCapacity,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.VehicleID,\nOLD.Brand,\nOLD.Year,\nOLD.Model,\nOLD.VehicleType,\nOLD.Capacity,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-20 23:42:17',NULL),(193,'DROP TABLE IF EXISTS cs_499_tcms.businesspartners_log; \nCREATE TABLE `cs_499_tcms`.`businesspartners_log` ( \n`CompanyID` int(11) DEFAULT NULL,\n`CompanyName` varchar(20) DEFAULT NULL,\n`Address` varchar(20) DEFAULT NULL,\n`City` varchar(20) DEFAULT NULL,\n`State` varchar(20) DEFAULT NULL,\n`ZipCode` int(5) DEFAULT NULL,\n`PhoneNumber` int(10) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-20 23:43:06',NULL),(194,'DROP TABLE IF EXISTS cs_499_tcms.createdstatements_log; \nCREATE TABLE `cs_499_tcms`.`createdstatements_log` ( \n`ID` bigint(20) DEFAULT NULL,\n`Code` varchar(4000) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-20 23:43:06',NULL),(195,'DROP TABLE IF EXISTS cs_499_tcms.maintenancepart_log; \nCREATE TABLE `cs_499_tcms`.`maintenancepart_log` ( \n`MaintenancePartID` int(11) DEFAULT NULL,\n`Quantity` int(11) DEFAULT NULL,\n`MaintenanceRecordID` int(11) DEFAULT NULL,\n`PartID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-20 23:43:06',NULL),(196,'DROP TABLE IF EXISTS cs_499_tcms.maintenancerecord_log; \nCREATE TABLE `cs_499_tcms`.`maintenancerecord_log` ( \n`MaintenanceID` int(11) DEFAULT NULL,\n`VehicleID` int(11) DEFAULT NULL,\n`MaintenanceDate` date DEFAULT NULL,\n`MaintenanceDescription` varchar(20) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-20 23:43:06',NULL),(197,'DROP TABLE IF EXISTS cs_499_tcms.maintenancerecorddetails_log; \nCREATE TABLE `cs_499_tcms`.`maintenancerecorddetails_log` ( \n`DetailID` int(11) DEFAULT NULL,\n`MaintenanceID` int(11) DEFAULT NULL,\n`EmployeeID` int(11) DEFAULT NULL,\n`RepairDescription` varchar(20) DEFAULT NULL,\n`RepairDate` date DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-20 23:43:06',NULL),(198,'DROP TABLE IF EXISTS cs_499_tcms.manifest_log; \nCREATE TABLE `cs_499_tcms`.`manifest_log` ( \n`ManifestID` int(11) DEFAULT NULL,\n`ShipmentType` varchar(11) DEFAULT NULL,\n`VehicleID` int(11) DEFAULT NULL,\n`DepartureTime` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`ETA` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`Arrived` tinyint(20) DEFAULT NULL,\n`ShippingCost` double DEFAULT NULL,\n`EmployeeID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-20 23:43:06',NULL),(199,'DROP TABLE IF EXISTS cs_499_tcms.parts_log; \nCREATE TABLE `cs_499_tcms`.`parts_log` ( \n`PartID` int(11) DEFAULT NULL,\n`PartDescription` varchar(20) DEFAULT NULL,\n`PartNumber` int(11) DEFAULT NULL,\n`PartPrice` double DEFAULT NULL,\n`PartWeight` int(11) DEFAULT NULL,\n`QuantityInStock` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-20 23:43:06',NULL),(200,'DROP TABLE IF EXISTS cs_499_tcms.payroll_log; \nCREATE TABLE `cs_499_tcms`.`payroll_log` ( \n`PayrollID` int(11) DEFAULT NULL,\n`EmployeeID` int(11) DEFAULT NULL,\n`PaymentDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`Payment` double DEFAULT NULL,\n`HoursWorked` double DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-20 23:43:06',NULL),(201,'DROP TABLE IF EXISTS cs_499_tcms.purchaseitems_log; \nCREATE TABLE `cs_499_tcms`.`purchaseitems_log` ( \n`ItemID` int(11) DEFAULT NULL,\n`OrderID` int(11) DEFAULT NULL,\n`Quantity` int(11) DEFAULT NULL,\n`PartID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-20 23:43:06',NULL),(202,'DROP TABLE IF EXISTS cs_499_tcms.purchaseorder_log; \nCREATE TABLE `cs_499_tcms`.`purchaseorder_log` ( \n`OrderID` int(11) DEFAULT NULL,\n`OrderNumber` int(11) DEFAULT NULL,\n`SourceID` int(11) DEFAULT NULL,\n`DestinationID` int(11) DEFAULT NULL,\n`ManifestID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-20 23:43:06',NULL),(203,'DROP TABLE IF EXISTS cs_499_tcms.user_log; \nCREATE TABLE `cs_499_tcms`.`user_log` ( \n`EmployeeID` int(10) DEFAULT NULL,\n`UserName` varchar(20) DEFAULT NULL,\n`FirstName` varchar(20) DEFAULT NULL,\n`MiddleName` varchar(20) DEFAULT NULL,\n`LastName` varchar(20) DEFAULT NULL,\n`Address` varchar(20) DEFAULT NULL,\n`City` varchar(20) DEFAULT NULL,\n`State` varchar(20) DEFAULT NULL,\n`ZipCode` int(5) DEFAULT NULL,\n`HomePhone` varchar(10) DEFAULT NULL,\n`CellPhone` varchar(10) DEFAULT NULL,\n`EmailAddress` varchar(20) DEFAULT NULL,\n`PayRate` double DEFAULT NULL,\n`EmploymentDate` date DEFAULT NULL,\n`JobID` int(11) DEFAULT NULL,\n`HomeStore` varchar(20) DEFAULT NULL,\n`JobDescription` varchar(20) DEFAULT NULL,\n`IsActive` tinyint(1) DEFAULT NULL,\n`HashKey` varchar(20) DEFAULT NULL,\n`Passphrase` varchar(20) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-20 23:43:06',NULL),(204,'DROP TABLE IF EXISTS cs_499_tcms.vehicle_log; \nCREATE TABLE `cs_499_tcms`.`vehicle_log` ( \n`VehicleID` int(11) DEFAULT NULL,\n`Brand` varchar(20) DEFAULT NULL,\n`Year` year(4) DEFAULT NULL,\n`Model` varchar(20) DEFAULT NULL,\n`VehicleType` varchar(20) DEFAULT NULL,\n`Capacity` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-20 23:43:06',NULL),(205,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bd; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bd` BEFORE DELETE ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \nINSERT INTO businesspartners_log \n( \nCompanyID,\nCompanyName,\nAddress,\nCity,\nState,\nZipCode,\nPhoneNumber,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.CompanyID,\nOLD.CompanyName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.PhoneNumber,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(206,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bi; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bi` BEFORE INSERT ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-22 23:17:24',NULL),(207,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bu; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bu` BEFORE UPDATE ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO businesspartners_log \n( \nCompanyID,\nCompanyName,\nAddress,\nCity,\nState,\nZipCode,\nPhoneNumber,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.CompanyID,\nOLD.CompanyName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.PhoneNumber,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(208,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bd; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bd` BEFORE DELETE ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \nINSERT INTO createdstatements_log \n( \nID,\nCode,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ID,\nOLD.Code,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(209,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bi; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bi` BEFORE INSERT ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-22 23:17:24',NULL),(210,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bu; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bu` BEFORE UPDATE ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO createdstatements_log \n( \nID,\nCode,\nModifiedStatus \n) \nVALUES \n( \nOLD.ID,\nOLD.Code,\n\'U\'\n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(211,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bd` BEFORE DELETE ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \nINSERT INTO maintenancepart_log \n( \nMaintenancePartID,\nQuantity,\nMaintenanceRecordID,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.MaintenancePartID,\nOLD.Quantity,\nOLD.MaintenanceRecordID,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(212,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bi` BEFORE INSERT ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-22 23:17:24',NULL),(213,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bu` BEFORE UPDATE ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancepart_log \n( \nMaintenancePartID,\nQuantity,\nMaintenanceRecordID,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.MaintenancePartID,\nOLD.Quantity,\nOLD.MaintenanceRecordID,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(214,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bd` BEFORE DELETE ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \nINSERT INTO maintenancerecord_log \n( \nMaintenanceID,\nVehicleID,\nMaintenanceDate,\nMaintenanceDescription,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.MaintenanceID,\nOLD.VehicleID,\nOLD.MaintenanceDate,\nOLD.MaintenanceDescription,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(215,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bi` BEFORE INSERT ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-22 23:17:24',NULL),(216,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bu` BEFORE UPDATE ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancerecord_log \n( \nMaintenanceID,\nVehicleID,\nMaintenanceDate,\nMaintenanceDescription,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.MaintenanceID,\nOLD.VehicleID,\nOLD.MaintenanceDate,\nOLD.MaintenanceDescription,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(217,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bd` BEFORE DELETE ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \nINSERT INTO maintenancerecorddetails_log \n( \nDetailID,\nMaintenanceID,\nEmployeeID,\nRepairDescription,\nRepairDate,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.DetailID,\nOLD.MaintenanceID,\nOLD.EmployeeID,\nOLD.RepairDescription,\nOLD.RepairDate,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(218,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bi` BEFORE INSERT ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-22 23:17:24',NULL),(219,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bu` BEFORE UPDATE ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancerecorddetails_log \n( \nDetailID,\nMaintenanceID,\nEmployeeID,\nRepairDescription,\nRepairDate,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.DetailID,\nOLD.MaintenanceID,\nOLD.EmployeeID,\nOLD.RepairDescription,\nOLD.RepairDate,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(220,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bd; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bd` BEFORE DELETE ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \nINSERT INTO manifest_log \n( \nManifestID,\nShipmentType,\nVehicleID,\nDepartureTime,\nETA,\nArrived,\nShippingCost,\nEmployeeID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ManifestID,\nOLD.ShipmentType,\nOLD.VehicleID,\nOLD.DepartureTime,\nOLD.ETA,\nOLD.Arrived,\nOLD.ShippingCost,\nOLD.EmployeeID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(221,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bi; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bi` BEFORE INSERT ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-22 23:17:24',NULL),(222,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bu; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bu` BEFORE UPDATE ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO manifest_log \n( \nManifestID,\nShipmentType,\nVehicleID,\nDepartureTime,\nETA,\nArrived,\nShippingCost,\nEmployeeID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.ManifestID,\nOLD.ShipmentType,\nOLD.VehicleID,\nOLD.DepartureTime,\nOLD.ETA,\nOLD.Arrived,\nOLD.ShippingCost,\nOLD.EmployeeID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(223,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bd; \nCREATE TRIGGER `cs_499_tcms`.`parts_bd` BEFORE DELETE ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \nINSERT INTO parts_log \n( \nPartID,\nPartDescription,\nPartNumber,\nPartPrice,\nPartWeight,\nQuantityInStock,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.PartID,\nOLD.PartDescription,\nOLD.PartNumber,\nOLD.PartPrice,\nOLD.PartWeight,\nOLD.QuantityInStock,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(224,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bi; \nCREATE TRIGGER `cs_499_tcms`.`parts_bi` BEFORE INSERT ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-22 23:17:24',NULL),(225,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bu; \nCREATE TRIGGER `cs_499_tcms`.`parts_bu` BEFORE UPDATE ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO parts_log \n( \nPartID,\nPartDescription,\nPartNumber,\nPartPrice,\nPartWeight,\nQuantityInStock,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.PartID,\nOLD.PartDescription,\nOLD.PartNumber,\nOLD.PartPrice,\nOLD.PartWeight,\nOLD.QuantityInStock,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(226,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bd; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bd` BEFORE DELETE ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \nINSERT INTO payroll_log \n( \nPayrollID,\nEmployeeID,\nPaymentDate,\nPayment,\nHoursWorked,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.PayrollID,\nOLD.EmployeeID,\nOLD.PaymentDate,\nOLD.Payment,\nOLD.HoursWorked,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(227,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bi; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bi` BEFORE INSERT ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-22 23:17:24',NULL),(228,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bu; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bu` BEFORE UPDATE ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO payroll_log \n( \nPayrollID,\nEmployeeID,\nPaymentDate,\nPayment,\nHoursWorked,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.PayrollID,\nOLD.EmployeeID,\nOLD.PaymentDate,\nOLD.Payment,\nOLD.HoursWorked,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(229,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bd; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bd` BEFORE DELETE ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \nINSERT INTO purchaseitems_log \n( \nItemID,\nOrderID,\nQuantity,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ItemID,\nOLD.OrderID,\nOLD.Quantity,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(230,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bi; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bi` BEFORE INSERT ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-22 23:17:24',NULL),(231,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bu; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bu` BEFORE UPDATE ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO purchaseitems_log \n( \nItemID,\nOrderID,\nQuantity,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.ItemID,\nOLD.OrderID,\nOLD.Quantity,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(232,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bd; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bd` BEFORE DELETE ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \nINSERT INTO purchaseorder_log \n( \nOrderID,\nOrderNumber,\nSourceID,\nDestinationID,\nManifestID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.OrderID,\nOLD.OrderNumber,\nOLD.SourceID,\nOLD.DestinationID,\nOLD.ManifestID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(233,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bi; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bi` BEFORE INSERT ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-22 23:17:24',NULL),(234,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bu; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bu` BEFORE UPDATE ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO purchaseorder_log \n( \nOrderID,\nOrderNumber,\nSourceID,\nDestinationID,\nManifestID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.OrderID,\nOLD.OrderNumber,\nOLD.SourceID,\nOLD.DestinationID,\nOLD.ManifestID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(235,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bd; \nCREATE TRIGGER `cs_499_tcms`.`user_bd` BEFORE DELETE ON cs_499_tcms.user FOR EACH ROW \nBEGIN \nINSERT INTO user_log \n( \nEmployeeID,\nUserName,\nFirstName,\nMiddleName,\nLastName,\nAddress,\nCity,\nState,\nZipCode,\nHomePhone,\nCellPhone,\nEmailAddress,\nPayRate,\nEmploymentDate,\nJobID,\nHomeStore,\nJobDescription,\nIsActive,\nHashKey,\nPassphrase,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.EmployeeID,\nOLD.UserName,\nOLD.FirstName,\nOLD.MiddleName,\nOLD.LastName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.HomePhone,\nOLD.CellPhone,\nOLD.EmailAddress,\nOLD.PayRate,\nOLD.EmploymentDate,\nOLD.JobID,\nOLD.HomeStore,\nOLD.JobDescription,\nOLD.IsActive,\nOLD.HashKey,\nOLD.Passphrase,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(236,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bi; \nCREATE TRIGGER `cs_499_tcms`.`user_bi` BEFORE INSERT ON cs_499_tcms.user FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-22 23:17:24',NULL),(237,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bu; \nCREATE TRIGGER `cs_499_tcms`.`user_bu` BEFORE UPDATE ON cs_499_tcms.user FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO user_log \n( \nEmployeeID,\nUserName,\nFirstName,\nMiddleName,\nLastName,\nAddress,\nCity,\nState,\nZipCode,\nHomePhone,\nCellPhone,\nEmailAddress,\nPayRate,\nEmploymentDate,\nJobID,\nHomeStore,\nJobDescription,\nIsActive,\nHashKey,\nPassphrase,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.EmployeeID,\nOLD.UserName,\nOLD.FirstName,\nOLD.MiddleName,\nOLD.LastName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.HomePhone,\nOLD.CellPhone,\nOLD.EmailAddress,\nOLD.PayRate,\nOLD.EmploymentDate,\nOLD.JobID,\nOLD.HomeStore,\nOLD.JobDescription,\nOLD.IsActive,\nOLD.HashKey,\nOLD.Passphrase,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(238,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bd; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bd` BEFORE DELETE ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \nINSERT INTO vehicle_log \n( \nVehicleID,\nBrand,\nYear,\nModel,\nVehicleType,\nCapacity,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.VehicleID,\nOLD.Brand,\nOLD.Year,\nOLD.Model,\nOLD.VehicleType,\nOLD.Capacity,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(239,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bi; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bi` BEFORE INSERT ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-22 23:17:24',NULL),(240,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bu; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bu` BEFORE UPDATE ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO vehicle_log \n( \nVehicleID,\nBrand,\nYear,\nModel,\nVehicleType,\nCapacity,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.VehicleID,\nOLD.Brand,\nOLD.Year,\nOLD.Model,\nOLD.VehicleType,\nOLD.Capacity,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-22 23:17:24',NULL),(241,'DROP TABLE IF EXISTS cs_499_tcms.businesspartners_log; \nCREATE TABLE `cs_499_tcms`.`businesspartners_log` ( \n`CompanyID` int(11) DEFAULT NULL,\n`CompanyName` varchar(20) DEFAULT NULL,\n`Address` varchar(20) DEFAULT NULL,\n`City` varchar(20) DEFAULT NULL,\n`State` varchar(20) DEFAULT NULL,\n`ZipCode` int(5) DEFAULT NULL,\n`PhoneNumber` int(10) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-22 23:19:19',NULL),(242,'DROP TABLE IF EXISTS cs_499_tcms.createdstatements_log; \nCREATE TABLE `cs_499_tcms`.`createdstatements_log` ( \n`ID` bigint(20) DEFAULT NULL,\n`Code` varchar(4000) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-22 23:19:19',NULL),(243,'DROP TABLE IF EXISTS cs_499_tcms.maintenancepart_log; \nCREATE TABLE `cs_499_tcms`.`maintenancepart_log` ( \n`MaintenancePartID` int(11) DEFAULT NULL,\n`Quantity` int(11) DEFAULT NULL,\n`MaintenanceRecordID` int(11) DEFAULT NULL,\n`PartID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-22 23:19:19',NULL),(244,'DROP TABLE IF EXISTS cs_499_tcms.maintenancerecord_log; \nCREATE TABLE `cs_499_tcms`.`maintenancerecord_log` ( \n`MaintenanceID` int(11) DEFAULT NULL,\n`VehicleID` int(11) DEFAULT NULL,\n`MaintenanceDate` date DEFAULT NULL,\n`MaintenanceDescription` varchar(20) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-22 23:19:19',NULL),(245,'DROP TABLE IF EXISTS cs_499_tcms.maintenancerecorddetails_log; \nCREATE TABLE `cs_499_tcms`.`maintenancerecorddetails_log` ( \n`DetailID` int(11) DEFAULT NULL,\n`MaintenanceID` int(11) DEFAULT NULL,\n`EmployeeID` int(11) DEFAULT NULL,\n`RepairDescription` varchar(20) DEFAULT NULL,\n`RepairDate` date DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-22 23:19:19',NULL),(246,'DROP TABLE IF EXISTS cs_499_tcms.manifest_log; \nCREATE TABLE `cs_499_tcms`.`manifest_log` ( \n`ManifestID` int(11) DEFAULT NULL,\n`ShipmentType` varchar(11) DEFAULT NULL,\n`VehicleID` int(11) DEFAULT NULL,\n`DepartureTime` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`ETA` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`Arrived` tinyint(20) DEFAULT NULL,\n`ShippingCost` double DEFAULT NULL,\n`EmployeeID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-22 23:19:19',NULL),(247,'DROP TABLE IF EXISTS cs_499_tcms.parts_log; \nCREATE TABLE `cs_499_tcms`.`parts_log` ( \n`PartID` int(11) DEFAULT NULL,\n`PartDescription` varchar(20) DEFAULT NULL,\n`PartNumber` int(11) DEFAULT NULL,\n`PartPrice` double DEFAULT NULL,\n`PartWeight` int(11) DEFAULT NULL,\n`QuantityInStock` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-22 23:19:19',NULL),(248,'DROP TABLE IF EXISTS cs_499_tcms.payroll_log; \nCREATE TABLE `cs_499_tcms`.`payroll_log` ( \n`PayrollID` int(11) DEFAULT NULL,\n`EmployeeID` int(11) DEFAULT NULL,\n`PaymentDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`Payment` double DEFAULT NULL,\n`HoursWorked` double DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-22 23:19:19',NULL),(249,'DROP TABLE IF EXISTS cs_499_tcms.purchaseitems_log; \nCREATE TABLE `cs_499_tcms`.`purchaseitems_log` ( \n`ItemID` int(11) DEFAULT NULL,\n`OrderID` int(11) DEFAULT NULL,\n`Quantity` int(11) DEFAULT NULL,\n`PartID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-22 23:19:19',NULL),(250,'DROP TABLE IF EXISTS cs_499_tcms.purchaseorder_log; \nCREATE TABLE `cs_499_tcms`.`purchaseorder_log` ( \n`OrderID` int(11) DEFAULT NULL,\n`OrderNumber` int(11) DEFAULT NULL,\n`SourceID` int(11) DEFAULT NULL,\n`DestinationID` int(11) DEFAULT NULL,\n`ManifestID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-22 23:19:19',NULL),(251,'DROP TABLE IF EXISTS cs_499_tcms.user_log; \nCREATE TABLE `cs_499_tcms`.`user_log` ( \n`EmployeeID` int(10) DEFAULT NULL,\n`UserName` varchar(20) DEFAULT NULL,\n`FirstName` varchar(20) DEFAULT NULL,\n`MiddleName` varchar(20) DEFAULT NULL,\n`LastName` varchar(20) DEFAULT NULL,\n`Address` varchar(20) DEFAULT NULL,\n`City` varchar(20) DEFAULT NULL,\n`State` varchar(20) DEFAULT NULL,\n`ZipCode` int(5) DEFAULT NULL,\n`HomePhone` varchar(10) DEFAULT NULL,\n`CellPhone` varchar(10) DEFAULT NULL,\n`EmailAddress` varchar(20) DEFAULT NULL,\n`PayRate` double DEFAULT NULL,\n`EmploymentDate` date DEFAULT NULL,\n`AccessLevel` int(11) DEFAULT NULL,\n`HomeStore` varchar(20) DEFAULT NULL,\n`JobDescription` varchar(20) DEFAULT NULL,\n`IsActive` tinyint(1) DEFAULT NULL,\n`HashKey` varchar(20) DEFAULT NULL,\n`Passphrase` varchar(20) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-22 23:19:19',NULL),(252,'DROP TABLE IF EXISTS cs_499_tcms.vehicle_log; \nCREATE TABLE `cs_499_tcms`.`vehicle_log` ( \n`VehicleID` int(11) DEFAULT NULL,\n`Brand` varchar(20) DEFAULT NULL,\n`Year` year(4) DEFAULT NULL,\n`Model` varchar(20) DEFAULT NULL,\n`VehicleType` varchar(20) DEFAULT NULL,\n`Capacity` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-22 23:19:19',NULL),(253,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bd; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bd` BEFORE DELETE ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \nINSERT INTO businesspartners_log \n( \nCompanyID,\nCompanyName,\nAddress,\nCity,\nState,\nZipCode,\nPhoneNumber,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.CompanyID,\nOLD.CompanyName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.PhoneNumber,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(254,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bi; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bi` BEFORE INSERT ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-23 00:07:49',NULL),(255,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bu; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bu` BEFORE UPDATE ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO businesspartners_log \n( \nCompanyID,\nCompanyName,\nAddress,\nCity,\nState,\nZipCode,\nPhoneNumber,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.CompanyID,\nOLD.CompanyName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.PhoneNumber,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(256,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bd; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bd` BEFORE DELETE ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \nINSERT INTO createdstatements_log \n( \nID,\nCode,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ID,\nOLD.Code,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(257,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bi; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bi` BEFORE INSERT ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-23 00:07:49',NULL),(258,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bu; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bu` BEFORE UPDATE ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO createdstatements_log \n( \nID,\nCode,\nModifiedStatus \n) \nVALUES \n( \nOLD.ID,\nOLD.Code,\n\'U\'\n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(259,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bd` BEFORE DELETE ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \nINSERT INTO maintenancepart_log \n( \nMaintenancePartID,\nQuantity,\nMaintenanceRecordID,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.MaintenancePartID,\nOLD.Quantity,\nOLD.MaintenanceRecordID,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(260,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bi` BEFORE INSERT ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-23 00:07:49',NULL),(261,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bu` BEFORE UPDATE ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancepart_log \n( \nMaintenancePartID,\nQuantity,\nMaintenanceRecordID,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.MaintenancePartID,\nOLD.Quantity,\nOLD.MaintenanceRecordID,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(262,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bd` BEFORE DELETE ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \nINSERT INTO maintenancerecord_log \n( \nMaintenanceID,\nVehicleID,\nMaintenanceDate,\nMaintenanceDescription,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.MaintenanceID,\nOLD.VehicleID,\nOLD.MaintenanceDate,\nOLD.MaintenanceDescription,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(263,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bi` BEFORE INSERT ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-23 00:07:49',NULL),(264,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bu` BEFORE UPDATE ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancerecord_log \n( \nMaintenanceID,\nVehicleID,\nMaintenanceDate,\nMaintenanceDescription,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.MaintenanceID,\nOLD.VehicleID,\nOLD.MaintenanceDate,\nOLD.MaintenanceDescription,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(265,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bd` BEFORE DELETE ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \nINSERT INTO maintenancerecorddetails_log \n( \nDetailID,\nMaintenanceID,\nEmployeeID,\nRepairDescription,\nRepairDate,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.DetailID,\nOLD.MaintenanceID,\nOLD.EmployeeID,\nOLD.RepairDescription,\nOLD.RepairDate,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(266,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bi` BEFORE INSERT ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-23 00:07:49',NULL),(267,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bu` BEFORE UPDATE ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancerecorddetails_log \n( \nDetailID,\nMaintenanceID,\nEmployeeID,\nRepairDescription,\nRepairDate,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.DetailID,\nOLD.MaintenanceID,\nOLD.EmployeeID,\nOLD.RepairDescription,\nOLD.RepairDate,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(268,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bd; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bd` BEFORE DELETE ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \nINSERT INTO manifest_log \n( \nManifestID,\nShipmentType,\nVehicleID,\nDepartureTime,\nETA,\nArrived,\nShippingCost,\nEmployeeID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ManifestID,\nOLD.ShipmentType,\nOLD.VehicleID,\nOLD.DepartureTime,\nOLD.ETA,\nOLD.Arrived,\nOLD.ShippingCost,\nOLD.EmployeeID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(269,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bi; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bi` BEFORE INSERT ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-23 00:07:49',NULL),(270,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bu; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bu` BEFORE UPDATE ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO manifest_log \n( \nManifestID,\nShipmentType,\nVehicleID,\nDepartureTime,\nETA,\nArrived,\nShippingCost,\nEmployeeID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.ManifestID,\nOLD.ShipmentType,\nOLD.VehicleID,\nOLD.DepartureTime,\nOLD.ETA,\nOLD.Arrived,\nOLD.ShippingCost,\nOLD.EmployeeID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(271,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bd; \nCREATE TRIGGER `cs_499_tcms`.`parts_bd` BEFORE DELETE ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \nINSERT INTO parts_log \n( \nPartID,\nPartDescription,\nPartNumber,\nPartPrice,\nPartWeight,\nQuantityInStock,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.PartID,\nOLD.PartDescription,\nOLD.PartNumber,\nOLD.PartPrice,\nOLD.PartWeight,\nOLD.QuantityInStock,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(272,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bi; \nCREATE TRIGGER `cs_499_tcms`.`parts_bi` BEFORE INSERT ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-23 00:07:49',NULL),(273,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bu; \nCREATE TRIGGER `cs_499_tcms`.`parts_bu` BEFORE UPDATE ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO parts_log \n( \nPartID,\nPartDescription,\nPartNumber,\nPartPrice,\nPartWeight,\nQuantityInStock,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.PartID,\nOLD.PartDescription,\nOLD.PartNumber,\nOLD.PartPrice,\nOLD.PartWeight,\nOLD.QuantityInStock,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(274,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bd; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bd` BEFORE DELETE ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \nINSERT INTO payroll_log \n( \nPayrollID,\nEmployeeID,\nPaymentDate,\nPayment,\nHoursWorked,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.PayrollID,\nOLD.EmployeeID,\nOLD.PaymentDate,\nOLD.Payment,\nOLD.HoursWorked,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(275,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bi; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bi` BEFORE INSERT ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-23 00:07:49',NULL),(276,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bu; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bu` BEFORE UPDATE ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO payroll_log \n( \nPayrollID,\nEmployeeID,\nPaymentDate,\nPayment,\nHoursWorked,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.PayrollID,\nOLD.EmployeeID,\nOLD.PaymentDate,\nOLD.Payment,\nOLD.HoursWorked,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(277,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bd; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bd` BEFORE DELETE ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \nINSERT INTO purchaseitems_log \n( \nItemID,\nOrderID,\nQuantity,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ItemID,\nOLD.OrderID,\nOLD.Quantity,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(278,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bi; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bi` BEFORE INSERT ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-23 00:07:49',NULL),(279,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bu; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bu` BEFORE UPDATE ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO purchaseitems_log \n( \nItemID,\nOrderID,\nQuantity,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.ItemID,\nOLD.OrderID,\nOLD.Quantity,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(280,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bd; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bd` BEFORE DELETE ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \nINSERT INTO purchaseorder_log \n( \nOrderID,\nOrderNumber,\nSourceID,\nDestinationID,\nManifestID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.OrderID,\nOLD.OrderNumber,\nOLD.SourceID,\nOLD.DestinationID,\nOLD.ManifestID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(281,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bi; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bi` BEFORE INSERT ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-23 00:07:49',NULL),(282,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bu; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bu` BEFORE UPDATE ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO purchaseorder_log \n( \nOrderID,\nOrderNumber,\nSourceID,\nDestinationID,\nManifestID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.OrderID,\nOLD.OrderNumber,\nOLD.SourceID,\nOLD.DestinationID,\nOLD.ManifestID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(283,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bd; \nCREATE TRIGGER `cs_499_tcms`.`user_bd` BEFORE DELETE ON cs_499_tcms.user FOR EACH ROW \nBEGIN \nINSERT INTO user_log \n( \nEmployeeID,\nUserName,\nFirstName,\nMiddleName,\nLastName,\nAddress,\nCity,\nState,\nZipCode,\nHomePhone,\nCellPhone,\nEmailAddress,\nPayRate,\nEmploymentDate,\nAccessLevel,\nHomeStore,\nJobDescription,\nIsActive,\nHashKey,\nPassphrase,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.EmployeeID,\nOLD.UserName,\nOLD.FirstName,\nOLD.MiddleName,\nOLD.LastName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.HomePhone,\nOLD.CellPhone,\nOLD.EmailAddress,\nOLD.PayRate,\nOLD.EmploymentDate,\nOLD.AccessLevel,\nOLD.HomeStore,\nOLD.JobDescription,\nOLD.IsActive,\nOLD.HashKey,\nOLD.Passphrase,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(284,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bi; \nCREATE TRIGGER `cs_499_tcms`.`user_bi` BEFORE INSERT ON cs_499_tcms.user FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-23 00:07:49',NULL),(285,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bu; \nCREATE TRIGGER `cs_499_tcms`.`user_bu` BEFORE UPDATE ON cs_499_tcms.user FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO user_log \n( \nEmployeeID,\nUserName,\nFirstName,\nMiddleName,\nLastName,\nAddress,\nCity,\nState,\nZipCode,\nHomePhone,\nCellPhone,\nEmailAddress,\nPayRate,\nEmploymentDate,\nAccessLevel,\nHomeStore,\nJobDescription,\nIsActive,\nHashKey,\nPassphrase,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.EmployeeID,\nOLD.UserName,\nOLD.FirstName,\nOLD.MiddleName,\nOLD.LastName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.HomePhone,\nOLD.CellPhone,\nOLD.EmailAddress,\nOLD.PayRate,\nOLD.EmploymentDate,\nOLD.AccessLevel,\nOLD.HomeStore,\nOLD.JobDescription,\nOLD.IsActive,\nOLD.HashKey,\nOLD.Passphrase,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(286,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bd; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bd` BEFORE DELETE ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \nINSERT INTO vehicle_log \n( \nVehicleID,\nBrand,\nYear,\nModel,\nVehicleType,\nCapacity,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.VehicleID,\nOLD.Brand,\nOLD.Year,\nOLD.Model,\nOLD.VehicleType,\nOLD.Capacity,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(287,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bi; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bi` BEFORE INSERT ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-23 00:07:49',NULL),(288,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bu; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bu` BEFORE UPDATE ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO vehicle_log \n( \nVehicleID,\nBrand,\nYear,\nModel,\nVehicleType,\nCapacity,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.VehicleID,\nOLD.Brand,\nOLD.Year,\nOLD.Model,\nOLD.VehicleType,\nOLD.Capacity,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-23 00:07:49',NULL),(289,'DROP TABLE IF EXISTS cs_499_tcms.businesspartners_log; \nCREATE TABLE `cs_499_tcms`.`businesspartners_log` ( \n`CompanyID` int(11) DEFAULT NULL,\n`CompanyName` varchar(20) DEFAULT NULL,\n`Address` varchar(20) DEFAULT NULL,\n`City` varchar(20) DEFAULT NULL,\n`State` varchar(20) DEFAULT NULL,\n`ZipCode` int(5) DEFAULT NULL,\n`PhoneNumber` int(10) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-23 00:09:18',NULL),(290,'DROP TABLE IF EXISTS cs_499_tcms.createdstatements_log; \nCREATE TABLE `cs_499_tcms`.`createdstatements_log` ( \n`ID` bigint(20) DEFAULT NULL,\n`Code` varchar(4000) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-23 00:09:18',NULL),(291,'DROP TABLE IF EXISTS cs_499_tcms.maintenancepart_log; \nCREATE TABLE `cs_499_tcms`.`maintenancepart_log` ( \n`MaintenancePartID` int(11) DEFAULT NULL,\n`Quantity` int(11) DEFAULT NULL,\n`MaintenanceRecordID` int(11) DEFAULT NULL,\n`PartID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-23 00:09:18',NULL),(292,'DROP TABLE IF EXISTS cs_499_tcms.maintenancerecord_log; \nCREATE TABLE `cs_499_tcms`.`maintenancerecord_log` ( \n`MaintenanceID` int(11) DEFAULT NULL,\n`VehicleID` int(11) DEFAULT NULL,\n`MaintenanceDate` date DEFAULT NULL,\n`MaintenanceDescription` varchar(20) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-23 00:09:18',NULL),(293,'DROP TABLE IF EXISTS cs_499_tcms.maintenancerecorddetails_log; \nCREATE TABLE `cs_499_tcms`.`maintenancerecorddetails_log` ( \n`DetailID` int(11) DEFAULT NULL,\n`MaintenanceID` int(11) DEFAULT NULL,\n`EmployeeID` int(11) DEFAULT NULL,\n`RepairDescription` varchar(20) DEFAULT NULL,\n`RepairDate` date DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-23 00:09:18',NULL),(294,'DROP TABLE IF EXISTS cs_499_tcms.manifest_log; \nCREATE TABLE `cs_499_tcms`.`manifest_log` ( \n`ManifestID` int(11) DEFAULT NULL,\n`ShipmentType` varchar(11) DEFAULT NULL,\n`VehicleID` int(11) DEFAULT NULL,\n`DepartureTime` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`ETA` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`Arrived` tinyint(20) DEFAULT NULL,\n`ShippingCost` double DEFAULT NULL,\n`EmployeeID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-23 00:09:18',NULL),(295,'DROP TABLE IF EXISTS cs_499_tcms.parts_log; \nCREATE TABLE `cs_499_tcms`.`parts_log` ( \n`PartID` int(11) DEFAULT NULL,\n`PartDescription` varchar(20) DEFAULT NULL,\n`PartNumber` int(11) DEFAULT NULL,\n`PartPrice` double DEFAULT NULL,\n`PartWeight` int(11) DEFAULT NULL,\n`QuantityInStock` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-23 00:09:18',NULL),(296,'DROP TABLE IF EXISTS cs_499_tcms.payroll_log; \nCREATE TABLE `cs_499_tcms`.`payroll_log` ( \n`PayrollID` int(11) DEFAULT NULL,\n`EmployeeID` int(11) DEFAULT NULL,\n`PaymentDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`Payment` double DEFAULT NULL,\n`HoursWorked` double DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-23 00:09:18',NULL),(297,'DROP TABLE IF EXISTS cs_499_tcms.purchaseitems_log; \nCREATE TABLE `cs_499_tcms`.`purchaseitems_log` ( \n`ItemID` int(11) DEFAULT NULL,\n`OrderID` int(11) DEFAULT NULL,\n`Quantity` int(11) DEFAULT NULL,\n`PartID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-23 00:09:18',NULL),(298,'DROP TABLE IF EXISTS cs_499_tcms.purchaseorder_log; \nCREATE TABLE `cs_499_tcms`.`purchaseorder_log` ( \n`OrderID` int(11) DEFAULT NULL,\n`OrderNumber` int(11) DEFAULT NULL,\n`SourceID` int(11) DEFAULT NULL,\n`DestinationID` int(11) DEFAULT NULL,\n`ManifestID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-23 00:09:18',NULL),(299,'DROP TABLE IF EXISTS cs_499_tcms.user_log; \nCREATE TABLE `cs_499_tcms`.`user_log` ( \n`EmployeeID` int(10) DEFAULT NULL,\n`UserName` varchar(20) DEFAULT NULL,\n`FirstName` varchar(20) DEFAULT NULL,\n`MiddleName` varchar(20) DEFAULT NULL,\n`LastName` varchar(20) DEFAULT NULL,\n`Address` varchar(20) DEFAULT NULL,\n`City` varchar(20) DEFAULT NULL,\n`State` varchar(20) DEFAULT NULL,\n`ZipCode` int(5) DEFAULT NULL,\n`HomePhone` varchar(10) DEFAULT NULL,\n`CellPhone` varchar(10) DEFAULT NULL,\n`EmailAddress` varchar(20) DEFAULT NULL,\n`PayRate` double DEFAULT NULL,\n`EmploymentDate` date DEFAULT NULL,\n`AccessLevel` int(11) DEFAULT NULL,\n`HomeStore` varchar(20) DEFAULT NULL,\n`JobDescription` varchar(20) DEFAULT NULL,\n`IsActive` tinyint(1) DEFAULT NULL,\n`HashKey` varchar(20) DEFAULT NULL,\n`Passphrase` varchar(20) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-23 00:09:18',NULL),(300,'DROP TABLE IF EXISTS cs_499_tcms.vehicle_log; \nCREATE TABLE `cs_499_tcms`.`vehicle_log` ( \n`VehicleID` int(11) DEFAULT NULL,\n`Brand` varchar(20) DEFAULT NULL,\n`Year` year(4) DEFAULT NULL,\n`Model` varchar(20) DEFAULT NULL,\n`VehicleType` int(20) DEFAULT NULL,\n`Capacity` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-23 00:09:18',NULL),(301,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bd; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bd` BEFORE DELETE ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \nINSERT INTO businesspartners_log \n( \nCompanyID,\nCompanyName,\nAddress,\nCity,\nState,\nZipCode,\nPhoneNumber,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.CompanyID,\nOLD.CompanyName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.PhoneNumber,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(302,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bi; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bi` BEFORE INSERT ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-25 20:32:21',NULL),(303,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bu; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bu` BEFORE UPDATE ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO businesspartners_log \n( \nCompanyID,\nCompanyName,\nAddress,\nCity,\nState,\nZipCode,\nPhoneNumber,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.CompanyID,\nOLD.CompanyName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.PhoneNumber,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(304,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bd; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bd` BEFORE DELETE ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \nINSERT INTO createdstatements_log \n( \nID,\nCode,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ID,\nOLD.Code,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(305,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bi; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bi` BEFORE INSERT ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-25 20:32:21',NULL),(306,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bu; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bu` BEFORE UPDATE ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO createdstatements_log \n( \nID,\nCode,\nModifiedStatus \n) \nVALUES \n( \nOLD.ID,\nOLD.Code,\n\'U\'\n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(307,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bd` BEFORE DELETE ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \nINSERT INTO maintenancepart_log \n( \nMaintenancePartID,\nQuantity,\nMaintenanceRecordID,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.MaintenancePartID,\nOLD.Quantity,\nOLD.MaintenanceRecordID,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(308,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bi` BEFORE INSERT ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-25 20:32:21',NULL),(309,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bu` BEFORE UPDATE ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancepart_log \n( \nMaintenancePartID,\nQuantity,\nMaintenanceRecordID,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.MaintenancePartID,\nOLD.Quantity,\nOLD.MaintenanceRecordID,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(310,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bd` BEFORE DELETE ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \nINSERT INTO maintenancerecord_log \n( \nMaintenanceID,\nVehicleID,\nMaintenanceDate,\nMaintenanceDescription,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.MaintenanceID,\nOLD.VehicleID,\nOLD.MaintenanceDate,\nOLD.MaintenanceDescription,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(311,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bi` BEFORE INSERT ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-25 20:32:21',NULL),(312,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bu` BEFORE UPDATE ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancerecord_log \n( \nMaintenanceID,\nVehicleID,\nMaintenanceDate,\nMaintenanceDescription,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.MaintenanceID,\nOLD.VehicleID,\nOLD.MaintenanceDate,\nOLD.MaintenanceDescription,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(313,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bd` BEFORE DELETE ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \nINSERT INTO maintenancerecorddetails_log \n( \nDetailID,\nMaintenanceID,\nEmployeeID,\nRepairDescription,\nRepairDate,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.DetailID,\nOLD.MaintenanceID,\nOLD.EmployeeID,\nOLD.RepairDescription,\nOLD.RepairDate,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(314,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bi` BEFORE INSERT ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-25 20:32:21',NULL),(315,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bu` BEFORE UPDATE ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancerecorddetails_log \n( \nDetailID,\nMaintenanceID,\nEmployeeID,\nRepairDescription,\nRepairDate,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.DetailID,\nOLD.MaintenanceID,\nOLD.EmployeeID,\nOLD.RepairDescription,\nOLD.RepairDate,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(316,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bd; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bd` BEFORE DELETE ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \nINSERT INTO manifest_log \n( \nManifestID,\nShipmentType,\nVehicleID,\nDepartureTime,\nETA,\nArrived,\nShippingCost,\nEmployeeID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ManifestID,\nOLD.ShipmentType,\nOLD.VehicleID,\nOLD.DepartureTime,\nOLD.ETA,\nOLD.Arrived,\nOLD.ShippingCost,\nOLD.EmployeeID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(317,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bi; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bi` BEFORE INSERT ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-25 20:32:21',NULL),(318,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bu; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bu` BEFORE UPDATE ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO manifest_log \n( \nManifestID,\nShipmentType,\nVehicleID,\nDepartureTime,\nETA,\nArrived,\nShippingCost,\nEmployeeID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.ManifestID,\nOLD.ShipmentType,\nOLD.VehicleID,\nOLD.DepartureTime,\nOLD.ETA,\nOLD.Arrived,\nOLD.ShippingCost,\nOLD.EmployeeID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(319,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bd; \nCREATE TRIGGER `cs_499_tcms`.`parts_bd` BEFORE DELETE ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \nINSERT INTO parts_log \n( \nPartID,\nPartDescription,\nPartNumber,\nPartPrice,\nPartWeight,\nQuantityInStock,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.PartID,\nOLD.PartDescription,\nOLD.PartNumber,\nOLD.PartPrice,\nOLD.PartWeight,\nOLD.QuantityInStock,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(320,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bi; \nCREATE TRIGGER `cs_499_tcms`.`parts_bi` BEFORE INSERT ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-25 20:32:21',NULL),(321,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bu; \nCREATE TRIGGER `cs_499_tcms`.`parts_bu` BEFORE UPDATE ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO parts_log \n( \nPartID,\nPartDescription,\nPartNumber,\nPartPrice,\nPartWeight,\nQuantityInStock,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.PartID,\nOLD.PartDescription,\nOLD.PartNumber,\nOLD.PartPrice,\nOLD.PartWeight,\nOLD.QuantityInStock,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(322,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bd; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bd` BEFORE DELETE ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \nINSERT INTO payroll_log \n( \nPayrollID,\nEmployeeID,\nPaymentDate,\nPayment,\nHoursWorked,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.PayrollID,\nOLD.EmployeeID,\nOLD.PaymentDate,\nOLD.Payment,\nOLD.HoursWorked,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(323,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bi; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bi` BEFORE INSERT ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-25 20:32:21',NULL),(324,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bu; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bu` BEFORE UPDATE ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO payroll_log \n( \nPayrollID,\nEmployeeID,\nPaymentDate,\nPayment,\nHoursWorked,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.PayrollID,\nOLD.EmployeeID,\nOLD.PaymentDate,\nOLD.Payment,\nOLD.HoursWorked,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(325,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bd; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bd` BEFORE DELETE ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \nINSERT INTO purchaseitems_log \n( \nItemID,\nOrderID,\nQuantity,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ItemID,\nOLD.OrderID,\nOLD.Quantity,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(326,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bi; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bi` BEFORE INSERT ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-25 20:32:21',NULL),(327,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bu; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bu` BEFORE UPDATE ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO purchaseitems_log \n( \nItemID,\nOrderID,\nQuantity,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.ItemID,\nOLD.OrderID,\nOLD.Quantity,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(328,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bd; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bd` BEFORE DELETE ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \nINSERT INTO purchaseorder_log \n( \nOrderID,\nOrderNumber,\nSourceID,\nDestinationID,\nManifestID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.OrderID,\nOLD.OrderNumber,\nOLD.SourceID,\nOLD.DestinationID,\nOLD.ManifestID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(329,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bi; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bi` BEFORE INSERT ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-25 20:32:21',NULL),(330,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bu; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bu` BEFORE UPDATE ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO purchaseorder_log \n( \nOrderID,\nOrderNumber,\nSourceID,\nDestinationID,\nManifestID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.OrderID,\nOLD.OrderNumber,\nOLD.SourceID,\nOLD.DestinationID,\nOLD.ManifestID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(331,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bd; \nCREATE TRIGGER `cs_499_tcms`.`user_bd` BEFORE DELETE ON cs_499_tcms.user FOR EACH ROW \nBEGIN \nINSERT INTO user_log \n( \nEmployeeID,\nUserName,\nFirstName,\nMiddleName,\nLastName,\nAddress,\nCity,\nState,\nZipCode,\nHomePhone,\nCellPhone,\nEmailAddress,\nPayRate,\nEmploymentDate,\nAccessLevel,\nHomeStore,\nJobDescription,\nIsActive,\nHashKey,\nPassphrase,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.EmployeeID,\nOLD.UserName,\nOLD.FirstName,\nOLD.MiddleName,\nOLD.LastName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.HomePhone,\nOLD.CellPhone,\nOLD.EmailAddress,\nOLD.PayRate,\nOLD.EmploymentDate,\nOLD.AccessLevel,\nOLD.HomeStore,\nOLD.JobDescription,\nOLD.IsActive,\nOLD.HashKey,\nOLD.Passphrase,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(332,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bi; \nCREATE TRIGGER `cs_499_tcms`.`user_bi` BEFORE INSERT ON cs_499_tcms.user FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-25 20:32:21',NULL),(333,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bu; \nCREATE TRIGGER `cs_499_tcms`.`user_bu` BEFORE UPDATE ON cs_499_tcms.user FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO user_log \n( \nEmployeeID,\nUserName,\nFirstName,\nMiddleName,\nLastName,\nAddress,\nCity,\nState,\nZipCode,\nHomePhone,\nCellPhone,\nEmailAddress,\nPayRate,\nEmploymentDate,\nAccessLevel,\nHomeStore,\nJobDescription,\nIsActive,\nHashKey,\nPassphrase,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.EmployeeID,\nOLD.UserName,\nOLD.FirstName,\nOLD.MiddleName,\nOLD.LastName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.HomePhone,\nOLD.CellPhone,\nOLD.EmailAddress,\nOLD.PayRate,\nOLD.EmploymentDate,\nOLD.AccessLevel,\nOLD.HomeStore,\nOLD.JobDescription,\nOLD.IsActive,\nOLD.HashKey,\nOLD.Passphrase,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(334,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bd; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bd` BEFORE DELETE ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \nINSERT INTO vehicle_log \n( \nVehicleID,\nBrand,\nYear,\nModel,\nVehicleType,\nCapacity,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.VehicleID,\nOLD.Brand,\nOLD.Year,\nOLD.Model,\nOLD.VehicleType,\nOLD.Capacity,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(335,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bi; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bi` BEFORE INSERT ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-25 20:32:21',NULL),(336,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bu; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bu` BEFORE UPDATE ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO vehicle_log \n( \nVehicleID,\nBrand,\nYear,\nModel,\nVehicleType,\nCapacity,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.VehicleID,\nOLD.Brand,\nOLD.Year,\nOLD.Model,\nOLD.VehicleType,\nOLD.Capacity,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-25 20:32:21',NULL),(337,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bd; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bd` BEFORE DELETE ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \nINSERT INTO businesspartners_log \n( \nCompanyID,\nCompanyName,\nAddress,\nCity,\nState,\nZipCode,\nPhoneNumber,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.CompanyID,\nOLD.CompanyName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.PhoneNumber,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(338,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bi; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bi` BEFORE INSERT ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 17:37:16',NULL),(339,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bu; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bu` BEFORE UPDATE ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO businesspartners_log \n( \nCompanyID,\nCompanyName,\nAddress,\nCity,\nState,\nZipCode,\nPhoneNumber,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.CompanyID,\nOLD.CompanyName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.PhoneNumber,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(340,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bd; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bd` BEFORE DELETE ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \nINSERT INTO createdstatements_log \n( \nID,\nCode,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ID,\nOLD.Code,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(341,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bi; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bi` BEFORE INSERT ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 17:37:16',NULL),(342,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bu; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bu` BEFORE UPDATE ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO createdstatements_log \n( \nID,\nCode,\nModifiedStatus \n) \nVALUES \n( \nOLD.ID,\nOLD.Code,\n\'U\'\n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(343,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bd` BEFORE DELETE ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \nINSERT INTO maintenancepart_log \n( \nMaintenancePartID,\nQuantity,\nMaintenanceRecordID,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.MaintenancePartID,\nOLD.Quantity,\nOLD.MaintenanceRecordID,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(344,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bi` BEFORE INSERT ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 17:37:16',NULL),(345,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bu` BEFORE UPDATE ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancepart_log \n( \nMaintenancePartID,\nQuantity,\nMaintenanceRecordID,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.MaintenancePartID,\nOLD.Quantity,\nOLD.MaintenanceRecordID,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(346,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bd` BEFORE DELETE ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \nINSERT INTO maintenancerecord_log \n( \nMaintenanceID,\nVehicleID,\nMaintenanceDate,\nMaintenanceDescription,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.MaintenanceID,\nOLD.VehicleID,\nOLD.MaintenanceDate,\nOLD.MaintenanceDescription,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(347,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bi` BEFORE INSERT ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 17:37:16',NULL),(348,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bu` BEFORE UPDATE ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancerecord_log \n( \nMaintenanceID,\nVehicleID,\nMaintenanceDate,\nMaintenanceDescription,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.MaintenanceID,\nOLD.VehicleID,\nOLD.MaintenanceDate,\nOLD.MaintenanceDescription,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(349,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bd` BEFORE DELETE ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \nINSERT INTO maintenancerecorddetails_log \n( \nDetailID,\nMaintenanceID,\nEmployeeID,\nRepairDescription,\nRepairDate,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.DetailID,\nOLD.MaintenanceID,\nOLD.EmployeeID,\nOLD.RepairDescription,\nOLD.RepairDate,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(350,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bi` BEFORE INSERT ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 17:37:16',NULL),(351,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bu` BEFORE UPDATE ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancerecorddetails_log \n( \nDetailID,\nMaintenanceID,\nEmployeeID,\nRepairDescription,\nRepairDate,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.DetailID,\nOLD.MaintenanceID,\nOLD.EmployeeID,\nOLD.RepairDescription,\nOLD.RepairDate,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(352,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bd; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bd` BEFORE DELETE ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \nINSERT INTO manifest_log \n( \nManifestID,\nShipmentType,\nVehicleID,\nDepartureTime,\nETA,\nArrived,\nShippingCost,\nEmployeeID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ManifestID,\nOLD.ShipmentType,\nOLD.VehicleID,\nOLD.DepartureTime,\nOLD.ETA,\nOLD.Arrived,\nOLD.ShippingCost,\nOLD.EmployeeID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(353,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bi; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bi` BEFORE INSERT ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 17:37:16',NULL),(354,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bu; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bu` BEFORE UPDATE ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO manifest_log \n( \nManifestID,\nShipmentType,\nVehicleID,\nDepartureTime,\nETA,\nArrived,\nShippingCost,\nEmployeeID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.ManifestID,\nOLD.ShipmentType,\nOLD.VehicleID,\nOLD.DepartureTime,\nOLD.ETA,\nOLD.Arrived,\nOLD.ShippingCost,\nOLD.EmployeeID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(355,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bd; \nCREATE TRIGGER `cs_499_tcms`.`parts_bd` BEFORE DELETE ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \nINSERT INTO parts_log \n( \nPartID,\nPartDescription,\nPartNumber,\nPartPrice,\nPartWeight,\nQuantityInStock,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.PartID,\nOLD.PartDescription,\nOLD.PartNumber,\nOLD.PartPrice,\nOLD.PartWeight,\nOLD.QuantityInStock,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(356,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bi; \nCREATE TRIGGER `cs_499_tcms`.`parts_bi` BEFORE INSERT ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 17:37:16',NULL),(357,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bu; \nCREATE TRIGGER `cs_499_tcms`.`parts_bu` BEFORE UPDATE ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO parts_log \n( \nPartID,\nPartDescription,\nPartNumber,\nPartPrice,\nPartWeight,\nQuantityInStock,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.PartID,\nOLD.PartDescription,\nOLD.PartNumber,\nOLD.PartPrice,\nOLD.PartWeight,\nOLD.QuantityInStock,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(358,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bd; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bd` BEFORE DELETE ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \nINSERT INTO payroll_log \n( \nPayrollID,\nEmployeeID,\nPaymentDate,\nPayment,\nHoursWorked,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.PayrollID,\nOLD.EmployeeID,\nOLD.PaymentDate,\nOLD.Payment,\nOLD.HoursWorked,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(359,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bi; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bi` BEFORE INSERT ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 17:37:16',NULL),(360,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bu; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bu` BEFORE UPDATE ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO payroll_log \n( \nPayrollID,\nEmployeeID,\nPaymentDate,\nPayment,\nHoursWorked,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.PayrollID,\nOLD.EmployeeID,\nOLD.PaymentDate,\nOLD.Payment,\nOLD.HoursWorked,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(361,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bd; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bd` BEFORE DELETE ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \nINSERT INTO purchaseitems_log \n( \nItemID,\nOrderID,\nQuantity,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ItemID,\nOLD.OrderID,\nOLD.Quantity,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(362,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bi; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bi` BEFORE INSERT ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 17:37:16',NULL),(363,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bu; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bu` BEFORE UPDATE ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO purchaseitems_log \n( \nItemID,\nOrderID,\nQuantity,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.ItemID,\nOLD.OrderID,\nOLD.Quantity,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(364,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bd; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bd` BEFORE DELETE ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \nINSERT INTO purchaseorder_log \n( \nOrderID,\nOrderNumber,\nSourceID,\nDestinationID,\nManifestID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.OrderID,\nOLD.OrderNumber,\nOLD.SourceID,\nOLD.DestinationID,\nOLD.ManifestID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(365,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bi; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bi` BEFORE INSERT ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 17:37:16',NULL),(366,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bu; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bu` BEFORE UPDATE ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO purchaseorder_log \n( \nOrderID,\nOrderNumber,\nSourceID,\nDestinationID,\nManifestID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.OrderID,\nOLD.OrderNumber,\nOLD.SourceID,\nOLD.DestinationID,\nOLD.ManifestID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(367,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bd; \nCREATE TRIGGER `cs_499_tcms`.`user_bd` BEFORE DELETE ON cs_499_tcms.user FOR EACH ROW \nBEGIN \nINSERT INTO user_log \n( \nEmployeeID,\nUserName,\nFirstName,\nMiddleName,\nLastName,\nAddress,\nCity,\nState,\nZipCode,\nHomePhone,\nCellPhone,\nEmailAddress,\nPayRate,\nEmploymentDate,\nAccessLevel,\nHomeStore,\nJobDescription,\nIsActive,\nHashKey,\nPassphrase,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.EmployeeID,\nOLD.UserName,\nOLD.FirstName,\nOLD.MiddleName,\nOLD.LastName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.HomePhone,\nOLD.CellPhone,\nOLD.EmailAddress,\nOLD.PayRate,\nOLD.EmploymentDate,\nOLD.AccessLevel,\nOLD.HomeStore,\nOLD.JobDescription,\nOLD.IsActive,\nOLD.HashKey,\nOLD.Passphrase,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(368,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bi; \nCREATE TRIGGER `cs_499_tcms`.`user_bi` BEFORE INSERT ON cs_499_tcms.user FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 17:37:16',NULL),(369,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bu; \nCREATE TRIGGER `cs_499_tcms`.`user_bu` BEFORE UPDATE ON cs_499_tcms.user FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO user_log \n( \nEmployeeID,\nUserName,\nFirstName,\nMiddleName,\nLastName,\nAddress,\nCity,\nState,\nZipCode,\nHomePhone,\nCellPhone,\nEmailAddress,\nPayRate,\nEmploymentDate,\nAccessLevel,\nHomeStore,\nJobDescription,\nIsActive,\nHashKey,\nPassphrase,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.EmployeeID,\nOLD.UserName,\nOLD.FirstName,\nOLD.MiddleName,\nOLD.LastName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.HomePhone,\nOLD.CellPhone,\nOLD.EmailAddress,\nOLD.PayRate,\nOLD.EmploymentDate,\nOLD.AccessLevel,\nOLD.HomeStore,\nOLD.JobDescription,\nOLD.IsActive,\nOLD.HashKey,\nOLD.Passphrase,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(370,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bd; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bd` BEFORE DELETE ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \nINSERT INTO vehicle_log \n( \nVehicleID,\nBrand,\nYear,\nModel,\nVehicleType,\nCapacity,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.VehicleID,\nOLD.Brand,\nOLD.Year,\nOLD.Model,\nOLD.VehicleType,\nOLD.Capacity,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(371,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bi; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bi` BEFORE INSERT ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 17:37:16',NULL),(372,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bu; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bu` BEFORE UPDATE ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO vehicle_log \n( \nVehicleID,\nBrand,\nYear,\nModel,\nVehicleType,\nCapacity,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.VehicleID,\nOLD.Brand,\nOLD.Year,\nOLD.Model,\nOLD.VehicleType,\nOLD.Capacity,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 17:37:16',NULL),(373,'DROP TABLE IF EXISTS cs_499_tcms.businesspartners_log; \nCREATE TABLE `cs_499_tcms`.`businesspartners_log` ( \n`CompanyID` int(11) DEFAULT NULL,\n`CompanyName` varchar(20) DEFAULT NULL,\n`Address` varchar(20) DEFAULT NULL,\n`City` varchar(20) DEFAULT NULL,\n`State` varchar(20) DEFAULT NULL,\n`ZipCode` int(5) DEFAULT NULL,\n`PhoneNumber` int(10) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 17:38:19',NULL),(374,'DROP TABLE IF EXISTS cs_499_tcms.createdstatements_log; \nCREATE TABLE `cs_499_tcms`.`createdstatements_log` ( \n`ID` bigint(20) DEFAULT NULL,\n`Code` varchar(4000) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 17:38:19',NULL),(375,'DROP TABLE IF EXISTS cs_499_tcms.maintenancepart_log; \nCREATE TABLE `cs_499_tcms`.`maintenancepart_log` ( \n`MaintenancePartID` int(11) DEFAULT NULL,\n`Quantity` int(11) DEFAULT NULL,\n`MaintenanceRecordID` int(11) DEFAULT NULL,\n`PartID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 17:38:19',NULL),(376,'DROP TABLE IF EXISTS cs_499_tcms.maintenancerecord_log; \nCREATE TABLE `cs_499_tcms`.`maintenancerecord_log` ( \n`MaintenanceID` int(11) DEFAULT NULL,\n`VehicleID` int(11) DEFAULT NULL,\n`MaintenanceDate` date DEFAULT NULL,\n`MaintenanceDescription` varchar(20) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 17:38:19',NULL),(377,'DROP TABLE IF EXISTS cs_499_tcms.maintenancerecorddetails_log; \nCREATE TABLE `cs_499_tcms`.`maintenancerecorddetails_log` ( \n`DetailID` int(11) DEFAULT NULL,\n`MaintenanceID` int(11) DEFAULT NULL,\n`EmployeeID` int(11) DEFAULT NULL,\n`RepairDescription` varchar(20) DEFAULT NULL,\n`RepairDate` date DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 17:38:19',NULL),(378,'DROP TABLE IF EXISTS cs_499_tcms.manifest_log; \nCREATE TABLE `cs_499_tcms`.`manifest_log` ( \n`ManifestID` int(11) DEFAULT NULL,\n`ShipmentType` varchar(11) DEFAULT NULL,\n`VehicleID` int(11) DEFAULT NULL,\n`DepartureTime` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`ETA` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`Arrived` tinyint(20) DEFAULT NULL,\n`ShippingCost` double DEFAULT NULL,\n`EmployeeID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 17:38:19',NULL),(379,'DROP TABLE IF EXISTS cs_499_tcms.parts_log; \nCREATE TABLE `cs_499_tcms`.`parts_log` ( \n`PartID` int(11) DEFAULT NULL,\n`PartDescription` varchar(20) DEFAULT NULL,\n`PartNumber` int(11) DEFAULT NULL,\n`PartPrice` double DEFAULT NULL,\n`PartWeight` int(11) DEFAULT NULL,\n`QuantityInStock` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 17:38:19',NULL),(380,'DROP TABLE IF EXISTS cs_499_tcms.payroll_log; \nCREATE TABLE `cs_499_tcms`.`payroll_log` ( \n`PayrollID` int(11) DEFAULT NULL,\n`EmployeeID` int(11) DEFAULT NULL,\n`PaymentDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`Payment` double DEFAULT NULL,\n`HoursWorked` double DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 17:38:19',NULL),(381,'DROP TABLE IF EXISTS cs_499_tcms.purchaseitems_log; \nCREATE TABLE `cs_499_tcms`.`purchaseitems_log` ( \n`ItemID` int(11) DEFAULT NULL,\n`OrderID` int(11) DEFAULT NULL,\n`Quantity` int(11) DEFAULT NULL,\n`PartID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 17:38:19',NULL),(382,'DROP TABLE IF EXISTS cs_499_tcms.purchaseorder_log; \nCREATE TABLE `cs_499_tcms`.`purchaseorder_log` ( \n`OrderID` int(11) DEFAULT NULL,\n`OrderNumber` int(11) DEFAULT NULL,\n`SourceID` int(11) DEFAULT NULL,\n`DestinationID` int(11) DEFAULT NULL,\n`ManifestID` int(11) DEFAULT NULL,\n`PaymentMade` tinyint(4) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 17:38:19',NULL),(383,'DROP TABLE IF EXISTS cs_499_tcms.user_log; \nCREATE TABLE `cs_499_tcms`.`user_log` ( \n`EmployeeID` int(10) DEFAULT NULL,\n`UserName` varchar(20) DEFAULT NULL,\n`FirstName` varchar(20) DEFAULT NULL,\n`MiddleName` varchar(20) DEFAULT NULL,\n`LastName` varchar(20) DEFAULT NULL,\n`Address` varchar(20) DEFAULT NULL,\n`City` varchar(20) DEFAULT NULL,\n`State` varchar(20) DEFAULT NULL,\n`ZipCode` int(5) DEFAULT NULL,\n`HomePhone` varchar(10) DEFAULT NULL,\n`CellPhone` varchar(10) DEFAULT NULL,\n`EmailAddress` varchar(20) DEFAULT NULL,\n`PayRate` double DEFAULT NULL,\n`EmploymentDate` date DEFAULT NULL,\n`AccessLevel` int(11) DEFAULT NULL,\n`HomeStore` varchar(20) DEFAULT NULL,\n`JobDescription` varchar(20) DEFAULT NULL,\n`IsActive` tinyint(1) DEFAULT NULL,\n`HashKey` varchar(2000) DEFAULT NULL,\n`Passphrase` varchar(2000) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 17:38:19',NULL),(384,'DROP TABLE IF EXISTS cs_499_tcms.vehicle_log; \nCREATE TABLE `cs_499_tcms`.`vehicle_log` ( \n`VehicleID` int(11) DEFAULT NULL,\n`Brand` varchar(20) DEFAULT NULL,\n`Year` year(4) DEFAULT NULL,\n`Model` varchar(20) DEFAULT NULL,\n`VehicleType` int(20) DEFAULT NULL,\n`Capacity` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 17:38:19',NULL),(385,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bd; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bd` BEFORE DELETE ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \nINSERT INTO businesspartners_log \n( \nCompanyID,\nCompanyName,\nAddress,\nCity,\nState,\nZipCode,\nPhoneNumber,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.CompanyID,\nOLD.CompanyName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.PhoneNumber,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(386,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bi; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bi` BEFORE INSERT ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 19:01:37',NULL),(387,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bu; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bu` BEFORE UPDATE ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO businesspartners_log \n( \nCompanyID,\nCompanyName,\nAddress,\nCity,\nState,\nZipCode,\nPhoneNumber,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.CompanyID,\nOLD.CompanyName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.PhoneNumber,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(388,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bd; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bd` BEFORE DELETE ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \nINSERT INTO createdstatements_log \n( \nID,\nCode,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ID,\nOLD.Code,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(389,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bi; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bi` BEFORE INSERT ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 19:01:37',NULL),(390,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bu; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bu` BEFORE UPDATE ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO createdstatements_log \n( \nID,\nCode,\nModifiedStatus \n) \nVALUES \n( \nOLD.ID,\nOLD.Code,\n\'U\'\n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(391,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bd` BEFORE DELETE ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \nINSERT INTO maintenancepart_log \n( \nMaintenancePartID,\nQuantity,\nMaintenanceRecordID,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.MaintenancePartID,\nOLD.Quantity,\nOLD.MaintenanceRecordID,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(392,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bi` BEFORE INSERT ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 19:01:37',NULL),(393,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bu` BEFORE UPDATE ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancepart_log \n( \nMaintenancePartID,\nQuantity,\nMaintenanceRecordID,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.MaintenancePartID,\nOLD.Quantity,\nOLD.MaintenanceRecordID,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(394,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bd` BEFORE DELETE ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \nINSERT INTO maintenancerecord_log \n( \nMaintenanceID,\nVehicleID,\nMaintenanceDate,\nMaintenanceDescription,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.MaintenanceID,\nOLD.VehicleID,\nOLD.MaintenanceDate,\nOLD.MaintenanceDescription,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(395,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bi` BEFORE INSERT ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 19:01:37',NULL),(396,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bu` BEFORE UPDATE ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancerecord_log \n( \nMaintenanceID,\nVehicleID,\nMaintenanceDate,\nMaintenanceDescription,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.MaintenanceID,\nOLD.VehicleID,\nOLD.MaintenanceDate,\nOLD.MaintenanceDescription,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(397,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bd` BEFORE DELETE ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \nINSERT INTO maintenancerecorddetails_log \n( \nDetailID,\nMaintenanceID,\nEmployeeID,\nRepairDescription,\nRepairDate,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.DetailID,\nOLD.MaintenanceID,\nOLD.EmployeeID,\nOLD.RepairDescription,\nOLD.RepairDate,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(398,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bi` BEFORE INSERT ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 19:01:37',NULL),(399,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bu` BEFORE UPDATE ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancerecorddetails_log \n( \nDetailID,\nMaintenanceID,\nEmployeeID,\nRepairDescription,\nRepairDate,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.DetailID,\nOLD.MaintenanceID,\nOLD.EmployeeID,\nOLD.RepairDescription,\nOLD.RepairDate,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(400,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bd; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bd` BEFORE DELETE ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \nINSERT INTO manifest_log \n( \nManifestID,\nShipmentType,\nVehicleID,\nDepartureTime,\nETA,\nArrived,\nShippingCost,\nEmployeeID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ManifestID,\nOLD.ShipmentType,\nOLD.VehicleID,\nOLD.DepartureTime,\nOLD.ETA,\nOLD.Arrived,\nOLD.ShippingCost,\nOLD.EmployeeID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(401,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bi; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bi` BEFORE INSERT ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 19:01:37',NULL),(402,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bu; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bu` BEFORE UPDATE ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO manifest_log \n( \nManifestID,\nShipmentType,\nVehicleID,\nDepartureTime,\nETA,\nArrived,\nShippingCost,\nEmployeeID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.ManifestID,\nOLD.ShipmentType,\nOLD.VehicleID,\nOLD.DepartureTime,\nOLD.ETA,\nOLD.Arrived,\nOLD.ShippingCost,\nOLD.EmployeeID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(403,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bd; \nCREATE TRIGGER `cs_499_tcms`.`parts_bd` BEFORE DELETE ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \nINSERT INTO parts_log \n( \nPartID,\nPartDescription,\nPartNumber,\nPartPrice,\nPartWeight,\nQuantityInStock,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.PartID,\nOLD.PartDescription,\nOLD.PartNumber,\nOLD.PartPrice,\nOLD.PartWeight,\nOLD.QuantityInStock,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(404,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bi; \nCREATE TRIGGER `cs_499_tcms`.`parts_bi` BEFORE INSERT ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 19:01:37',NULL),(405,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bu; \nCREATE TRIGGER `cs_499_tcms`.`parts_bu` BEFORE UPDATE ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO parts_log \n( \nPartID,\nPartDescription,\nPartNumber,\nPartPrice,\nPartWeight,\nQuantityInStock,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.PartID,\nOLD.PartDescription,\nOLD.PartNumber,\nOLD.PartPrice,\nOLD.PartWeight,\nOLD.QuantityInStock,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(406,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bd; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bd` BEFORE DELETE ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \nINSERT INTO payroll_log \n( \nPayrollID,\nEmployeeID,\nPaymentDate,\nPayment,\nHoursWorked,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.PayrollID,\nOLD.EmployeeID,\nOLD.PaymentDate,\nOLD.Payment,\nOLD.HoursWorked,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(407,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bi; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bi` BEFORE INSERT ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 19:01:37',NULL),(408,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bu; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bu` BEFORE UPDATE ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO payroll_log \n( \nPayrollID,\nEmployeeID,\nPaymentDate,\nPayment,\nHoursWorked,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.PayrollID,\nOLD.EmployeeID,\nOLD.PaymentDate,\nOLD.Payment,\nOLD.HoursWorked,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(409,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bd; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bd` BEFORE DELETE ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \nINSERT INTO purchaseitems_log \n( \nItemID,\nOrderID,\nQuantity,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ItemID,\nOLD.OrderID,\nOLD.Quantity,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(410,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bi; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bi` BEFORE INSERT ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 19:01:37',NULL),(411,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bu; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bu` BEFORE UPDATE ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO purchaseitems_log \n( \nItemID,\nOrderID,\nQuantity,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.ItemID,\nOLD.OrderID,\nOLD.Quantity,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(412,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bd; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bd` BEFORE DELETE ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \nINSERT INTO purchaseorder_log \n( \nOrderID,\nOrderNumber,\nSourceID,\nDestinationID,\nManifestID,\nPaymentMade,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.OrderID,\nOLD.OrderNumber,\nOLD.SourceID,\nOLD.DestinationID,\nOLD.ManifestID,\nOLD.PaymentMade,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(413,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bi; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bi` BEFORE INSERT ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 19:01:37',NULL),(414,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bu; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bu` BEFORE UPDATE ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO purchaseorder_log \n( \nOrderID,\nOrderNumber,\nSourceID,\nDestinationID,\nManifestID,\nPaymentMade,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.OrderID,\nOLD.OrderNumber,\nOLD.SourceID,\nOLD.DestinationID,\nOLD.ManifestID,\nOLD.PaymentMade,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(415,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bd; \nCREATE TRIGGER `cs_499_tcms`.`user_bd` BEFORE DELETE ON cs_499_tcms.user FOR EACH ROW \nBEGIN \nINSERT INTO user_log \n( \nEmployeeID,\nUserName,\nFirstName,\nMiddleName,\nLastName,\nAddress,\nCity,\nState,\nZipCode,\nHomePhone,\nCellPhone,\nEmailAddress,\nPayRate,\nEmploymentDate,\nAccessLevel,\nHomeStore,\nJobDescription,\nIsActive,\nHashKey,\nPassphrase,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.EmployeeID,\nOLD.UserName,\nOLD.FirstName,\nOLD.MiddleName,\nOLD.LastName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.HomePhone,\nOLD.CellPhone,\nOLD.EmailAddress,\nOLD.PayRate,\nOLD.EmploymentDate,\nOLD.AccessLevel,\nOLD.HomeStore,\nOLD.JobDescription,\nOLD.IsActive,\nOLD.HashKey,\nOLD.Passphrase,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(416,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bi; \nCREATE TRIGGER `cs_499_tcms`.`user_bi` BEFORE INSERT ON cs_499_tcms.user FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 19:01:37',NULL),(417,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bu; \nCREATE TRIGGER `cs_499_tcms`.`user_bu` BEFORE UPDATE ON cs_499_tcms.user FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO user_log \n( \nEmployeeID,\nUserName,\nFirstName,\nMiddleName,\nLastName,\nAddress,\nCity,\nState,\nZipCode,\nHomePhone,\nCellPhone,\nEmailAddress,\nPayRate,\nEmploymentDate,\nAccessLevel,\nHomeStore,\nJobDescription,\nIsActive,\nHashKey,\nPassphrase,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.EmployeeID,\nOLD.UserName,\nOLD.FirstName,\nOLD.MiddleName,\nOLD.LastName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.HomePhone,\nOLD.CellPhone,\nOLD.EmailAddress,\nOLD.PayRate,\nOLD.EmploymentDate,\nOLD.AccessLevel,\nOLD.HomeStore,\nOLD.JobDescription,\nOLD.IsActive,\nOLD.HashKey,\nOLD.Passphrase,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(418,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bd; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bd` BEFORE DELETE ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \nINSERT INTO vehicle_log \n( \nVehicleID,\nBrand,\nYear,\nModel,\nVehicleType,\nCapacity,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.VehicleID,\nOLD.Brand,\nOLD.Year,\nOLD.Model,\nOLD.VehicleType,\nOLD.Capacity,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(419,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bi; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bi` BEFORE INSERT ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 19:01:37',NULL),(420,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bu; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bu` BEFORE UPDATE ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO vehicle_log \n( \nVehicleID,\nBrand,\nYear,\nModel,\nVehicleType,\nCapacity,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.VehicleID,\nOLD.Brand,\nOLD.Year,\nOLD.Model,\nOLD.VehicleType,\nOLD.Capacity,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 19:01:37',NULL),(421,'DROP TABLE IF EXISTS cs_499_tcms.businesspartners_log; \nCREATE TABLE `cs_499_tcms`.`businesspartners_log` ( \n`CompanyID` int(11) DEFAULT NULL,\n`CompanyName` varchar(20) DEFAULT NULL,\n`Address` varchar(20) DEFAULT NULL,\n`City` varchar(20) DEFAULT NULL,\n`State` varchar(20) DEFAULT NULL,\n`ZipCode` int(5) DEFAULT NULL,\n`PhoneNumber` varchar(10) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 19:02:06',NULL),(422,'DROP TABLE IF EXISTS cs_499_tcms.createdstatements_log; \nCREATE TABLE `cs_499_tcms`.`createdstatements_log` ( \n`ID` bigint(20) DEFAULT NULL,\n`Code` varchar(4000) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 19:02:06',NULL),(423,'DROP TABLE IF EXISTS cs_499_tcms.maintenancepart_log; \nCREATE TABLE `cs_499_tcms`.`maintenancepart_log` ( \n`MaintenancePartID` int(11) DEFAULT NULL,\n`Quantity` int(11) DEFAULT NULL,\n`MaintenanceRecordID` int(11) DEFAULT NULL,\n`PartID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 19:02:06',NULL),(424,'DROP TABLE IF EXISTS cs_499_tcms.maintenancerecord_log; \nCREATE TABLE `cs_499_tcms`.`maintenancerecord_log` ( \n`MaintenanceID` int(11) DEFAULT NULL,\n`VehicleID` int(11) DEFAULT NULL,\n`MaintenanceDate` date DEFAULT NULL,\n`MaintenanceDescription` varchar(20) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 19:02:06',NULL),(425,'DROP TABLE IF EXISTS cs_499_tcms.maintenancerecorddetails_log; \nCREATE TABLE `cs_499_tcms`.`maintenancerecorddetails_log` ( \n`DetailID` int(11) DEFAULT NULL,\n`MaintenanceID` int(11) DEFAULT NULL,\n`EmployeeID` int(11) DEFAULT NULL,\n`RepairDescription` varchar(20) DEFAULT NULL,\n`RepairDate` date DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 19:02:06',NULL),(426,'DROP TABLE IF EXISTS cs_499_tcms.manifest_log; \nCREATE TABLE `cs_499_tcms`.`manifest_log` ( \n`ManifestID` int(11) DEFAULT NULL,\n`ShipmentType` varchar(11) DEFAULT NULL,\n`VehicleID` int(11) DEFAULT NULL,\n`DepartureTime` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`ETA` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`Arrived` tinyint(20) DEFAULT NULL,\n`ShippingCost` double DEFAULT NULL,\n`EmployeeID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 19:02:06',NULL),(427,'DROP TABLE IF EXISTS cs_499_tcms.parts_log; \nCREATE TABLE `cs_499_tcms`.`parts_log` ( \n`PartID` int(11) DEFAULT NULL,\n`PartDescription` varchar(20) DEFAULT NULL,\n`PartNumber` int(11) DEFAULT NULL,\n`PartPrice` double DEFAULT NULL,\n`PartWeight` int(11) DEFAULT NULL,\n`QuantityInStock` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 19:02:06',NULL),(428,'DROP TABLE IF EXISTS cs_499_tcms.payroll_log; \nCREATE TABLE `cs_499_tcms`.`payroll_log` ( \n`PayrollID` int(11) DEFAULT NULL,\n`EmployeeID` int(11) DEFAULT NULL,\n`PaymentDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`Payment` double DEFAULT NULL,\n`HoursWorked` double DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 19:02:06',NULL),(429,'DROP TABLE IF EXISTS cs_499_tcms.purchaseitems_log; \nCREATE TABLE `cs_499_tcms`.`purchaseitems_log` ( \n`ItemID` int(11) DEFAULT NULL,\n`OrderID` int(11) DEFAULT NULL,\n`Quantity` int(11) DEFAULT NULL,\n`PartID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 19:02:06',NULL),(430,'DROP TABLE IF EXISTS cs_499_tcms.purchaseorder_log; \nCREATE TABLE `cs_499_tcms`.`purchaseorder_log` ( \n`OrderID` int(11) DEFAULT NULL,\n`OrderNumber` int(11) DEFAULT NULL,\n`SourceID` int(11) DEFAULT NULL,\n`DestinationID` int(11) DEFAULT NULL,\n`ManifestID` int(11) DEFAULT NULL,\n`PaymentMade` tinyint(4) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 19:02:06',NULL),(431,'DROP TABLE IF EXISTS cs_499_tcms.user_log; \nCREATE TABLE `cs_499_tcms`.`user_log` ( \n`EmployeeID` int(10) DEFAULT NULL,\n`UserName` varchar(20) DEFAULT NULL,\n`FirstName` varchar(20) DEFAULT NULL,\n`MiddleName` varchar(20) DEFAULT NULL,\n`LastName` varchar(20) DEFAULT NULL,\n`Address` varchar(20) DEFAULT NULL,\n`City` varchar(20) DEFAULT NULL,\n`State` varchar(20) DEFAULT NULL,\n`ZipCode` int(5) DEFAULT NULL,\n`HomePhone` varchar(10) DEFAULT NULL,\n`CellPhone` varchar(10) DEFAULT NULL,\n`EmailAddress` varchar(20) DEFAULT NULL,\n`PayRate` double DEFAULT NULL,\n`EmploymentDate` date DEFAULT NULL,\n`AccessLevel` int(11) DEFAULT NULL,\n`HomeStore` varchar(20) DEFAULT NULL,\n`JobDescription` varchar(20) DEFAULT NULL,\n`IsActive` tinyint(1) DEFAULT NULL,\n`HashKey` varchar(2000) DEFAULT NULL,\n`Passphrase` varchar(2000) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 19:02:06',NULL),(432,'DROP TABLE IF EXISTS cs_499_tcms.vehicle_log; \nCREATE TABLE `cs_499_tcms`.`vehicle_log` ( \n`VehicleID` int(11) DEFAULT NULL,\n`Brand` varchar(20) DEFAULT NULL,\n`Year` year(4) DEFAULT NULL,\n`Model` varchar(20) DEFAULT NULL,\n`VehicleType` int(20) DEFAULT NULL,\n`Capacity` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 19:02:06',NULL),(433,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bd; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bd` BEFORE DELETE ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \nINSERT INTO businesspartners_log \n( \nCompanyID,\nCompanyName,\nAddress,\nCity,\nState,\nZipCode,\nPhoneNumber,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.CompanyID,\nOLD.CompanyName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.PhoneNumber,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(434,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bi; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bi` BEFORE INSERT ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 22:27:41',NULL),(435,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bu; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bu` BEFORE UPDATE ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO businesspartners_log \n( \nCompanyID,\nCompanyName,\nAddress,\nCity,\nState,\nZipCode,\nPhoneNumber,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.CompanyID,\nOLD.CompanyName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.PhoneNumber,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(436,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bd; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bd` BEFORE DELETE ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \nINSERT INTO createdstatements_log \n( \nID,\nCode,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ID,\nOLD.Code,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(437,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bi; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bi` BEFORE INSERT ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 22:27:41',NULL),(438,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bu; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bu` BEFORE UPDATE ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO createdstatements_log \n( \nID,\nCode,\nModifiedStatus \n) \nVALUES \n( \nOLD.ID,\nOLD.Code,\n\'U\'\n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(439,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bd` BEFORE DELETE ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \nINSERT INTO maintenancepart_log \n( \nMaintenancePartID,\nQuantity,\nMaintenanceRecordID,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.MaintenancePartID,\nOLD.Quantity,\nOLD.MaintenanceRecordID,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(440,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bi` BEFORE INSERT ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 22:27:41',NULL),(441,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bu` BEFORE UPDATE ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancepart_log \n( \nMaintenancePartID,\nQuantity,\nMaintenanceRecordID,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.MaintenancePartID,\nOLD.Quantity,\nOLD.MaintenanceRecordID,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(442,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bd` BEFORE DELETE ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \nINSERT INTO maintenancerecord_log \n( \nMaintenanceID,\nVehicleID,\nMaintenanceDate,\nMaintenanceDescription,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.MaintenanceID,\nOLD.VehicleID,\nOLD.MaintenanceDate,\nOLD.MaintenanceDescription,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(443,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bi` BEFORE INSERT ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 22:27:41',NULL),(444,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bu` BEFORE UPDATE ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancerecord_log \n( \nMaintenanceID,\nVehicleID,\nMaintenanceDate,\nMaintenanceDescription,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.MaintenanceID,\nOLD.VehicleID,\nOLD.MaintenanceDate,\nOLD.MaintenanceDescription,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(445,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bd` BEFORE DELETE ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \nINSERT INTO maintenancerecorddetails_log \n( \nDetailID,\nMaintenanceID,\nEmployeeID,\nRepairDescription,\nRepairDate,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.DetailID,\nOLD.MaintenanceID,\nOLD.EmployeeID,\nOLD.RepairDescription,\nOLD.RepairDate,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(446,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bi` BEFORE INSERT ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 22:27:41',NULL),(447,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bu` BEFORE UPDATE ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancerecorddetails_log \n( \nDetailID,\nMaintenanceID,\nEmployeeID,\nRepairDescription,\nRepairDate,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.DetailID,\nOLD.MaintenanceID,\nOLD.EmployeeID,\nOLD.RepairDescription,\nOLD.RepairDate,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(448,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bd; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bd` BEFORE DELETE ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \nINSERT INTO manifest_log \n( \nManifestID,\nShipmentType,\nVehicleID,\nDepartureTime,\nETA,\nArrived,\nShippingCost,\nEmployeeID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ManifestID,\nOLD.ShipmentType,\nOLD.VehicleID,\nOLD.DepartureTime,\nOLD.ETA,\nOLD.Arrived,\nOLD.ShippingCost,\nOLD.EmployeeID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(449,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bi; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bi` BEFORE INSERT ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 22:27:41',NULL),(450,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bu; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bu` BEFORE UPDATE ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO manifest_log \n( \nManifestID,\nShipmentType,\nVehicleID,\nDepartureTime,\nETA,\nArrived,\nShippingCost,\nEmployeeID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.ManifestID,\nOLD.ShipmentType,\nOLD.VehicleID,\nOLD.DepartureTime,\nOLD.ETA,\nOLD.Arrived,\nOLD.ShippingCost,\nOLD.EmployeeID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(451,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bd; \nCREATE TRIGGER `cs_499_tcms`.`parts_bd` BEFORE DELETE ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \nINSERT INTO parts_log \n( \nPartID,\nPartDescription,\nPartNumber,\nPartPrice,\nPartWeight,\nQuantityInStock,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.PartID,\nOLD.PartDescription,\nOLD.PartNumber,\nOLD.PartPrice,\nOLD.PartWeight,\nOLD.QuantityInStock,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(452,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bi; \nCREATE TRIGGER `cs_499_tcms`.`parts_bi` BEFORE INSERT ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 22:27:41',NULL),(453,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bu; \nCREATE TRIGGER `cs_499_tcms`.`parts_bu` BEFORE UPDATE ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO parts_log \n( \nPartID,\nPartDescription,\nPartNumber,\nPartPrice,\nPartWeight,\nQuantityInStock,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.PartID,\nOLD.PartDescription,\nOLD.PartNumber,\nOLD.PartPrice,\nOLD.PartWeight,\nOLD.QuantityInStock,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(454,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bd; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bd` BEFORE DELETE ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \nINSERT INTO payroll_log \n( \nPayrollID,\nEmployeeID,\nPaymentDate,\nPayment,\nHoursWorked,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.PayrollID,\nOLD.EmployeeID,\nOLD.PaymentDate,\nOLD.Payment,\nOLD.HoursWorked,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(455,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bi; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bi` BEFORE INSERT ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 22:27:41',NULL),(456,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bu; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bu` BEFORE UPDATE ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO payroll_log \n( \nPayrollID,\nEmployeeID,\nPaymentDate,\nPayment,\nHoursWorked,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.PayrollID,\nOLD.EmployeeID,\nOLD.PaymentDate,\nOLD.Payment,\nOLD.HoursWorked,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(457,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bd; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bd` BEFORE DELETE ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \nINSERT INTO purchaseitems_log \n( \nItemID,\nOrderID,\nQuantity,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ItemID,\nOLD.OrderID,\nOLD.Quantity,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(458,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bi; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bi` BEFORE INSERT ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 22:27:41',NULL),(459,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bu; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bu` BEFORE UPDATE ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO purchaseitems_log \n( \nItemID,\nOrderID,\nQuantity,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.ItemID,\nOLD.OrderID,\nOLD.Quantity,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(460,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bd; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bd` BEFORE DELETE ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \nINSERT INTO purchaseorder_log \n( \nOrderID,\nOrderNumber,\nSourceID,\nDestinationID,\nManifestID,\nPaymentMade,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.OrderID,\nOLD.OrderNumber,\nOLD.SourceID,\nOLD.DestinationID,\nOLD.ManifestID,\nOLD.PaymentMade,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(461,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bi; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bi` BEFORE INSERT ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 22:27:41',NULL),(462,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bu; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bu` BEFORE UPDATE ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO purchaseorder_log \n( \nOrderID,\nOrderNumber,\nSourceID,\nDestinationID,\nManifestID,\nPaymentMade,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.OrderID,\nOLD.OrderNumber,\nOLD.SourceID,\nOLD.DestinationID,\nOLD.ManifestID,\nOLD.PaymentMade,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(463,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bd; \nCREATE TRIGGER `cs_499_tcms`.`user_bd` BEFORE DELETE ON cs_499_tcms.user FOR EACH ROW \nBEGIN \nINSERT INTO user_log \n( \nEmployeeID,\nUserName,\nFirstName,\nMiddleName,\nLastName,\nAddress,\nCity,\nState,\nZipCode,\nHomePhone,\nCellPhone,\nEmailAddress,\nPayRate,\nEmploymentDate,\nAccessLevel,\nHomeStore,\nJobDescription,\nIsActive,\nHashKey,\nPassphrase,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.EmployeeID,\nOLD.UserName,\nOLD.FirstName,\nOLD.MiddleName,\nOLD.LastName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.HomePhone,\nOLD.CellPhone,\nOLD.EmailAddress,\nOLD.PayRate,\nOLD.EmploymentDate,\nOLD.AccessLevel,\nOLD.HomeStore,\nOLD.JobDescription,\nOLD.IsActive,\nOLD.HashKey,\nOLD.Passphrase,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(464,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bi; \nCREATE TRIGGER `cs_499_tcms`.`user_bi` BEFORE INSERT ON cs_499_tcms.user FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 22:27:41',NULL),(465,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bu; \nCREATE TRIGGER `cs_499_tcms`.`user_bu` BEFORE UPDATE ON cs_499_tcms.user FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO user_log \n( \nEmployeeID,\nUserName,\nFirstName,\nMiddleName,\nLastName,\nAddress,\nCity,\nState,\nZipCode,\nHomePhone,\nCellPhone,\nEmailAddress,\nPayRate,\nEmploymentDate,\nAccessLevel,\nHomeStore,\nJobDescription,\nIsActive,\nHashKey,\nPassphrase,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.EmployeeID,\nOLD.UserName,\nOLD.FirstName,\nOLD.MiddleName,\nOLD.LastName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.HomePhone,\nOLD.CellPhone,\nOLD.EmailAddress,\nOLD.PayRate,\nOLD.EmploymentDate,\nOLD.AccessLevel,\nOLD.HomeStore,\nOLD.JobDescription,\nOLD.IsActive,\nOLD.HashKey,\nOLD.Passphrase,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(466,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bd; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bd` BEFORE DELETE ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \nINSERT INTO vehicle_log \n( \nVehicleID,\nBrand,\nYear,\nModel,\nVehicleType,\nCapacity,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.VehicleID,\nOLD.Brand,\nOLD.Year,\nOLD.Model,\nOLD.VehicleType,\nOLD.Capacity,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(467,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bi; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bi` BEFORE INSERT ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-03-26 22:27:41',NULL),(468,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bu; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bu` BEFORE UPDATE ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO vehicle_log \n( \nVehicleID,\nBrand,\nYear,\nModel,\nVehicleType,\nCapacity,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.VehicleID,\nOLD.Brand,\nOLD.Year,\nOLD.Model,\nOLD.VehicleType,\nOLD.Capacity,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-03-26 22:27:41',NULL),(469,'DROP TABLE IF EXISTS cs_499_tcms.businesspartners_log; \nCREATE TABLE `cs_499_tcms`.`businesspartners_log` ( \n`CompanyID` int(11) DEFAULT NULL,\n`CompanyName` varchar(20) DEFAULT NULL,\n`Address` varchar(20) DEFAULT NULL,\n`City` varchar(20) DEFAULT NULL,\n`State` varchar(20) DEFAULT NULL,\n`ZipCode` int(5) DEFAULT NULL,\n`PhoneNumber` varchar(10) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 22:28:22',NULL),(470,'DROP TABLE IF EXISTS cs_499_tcms.createdstatements_log; \nCREATE TABLE `cs_499_tcms`.`createdstatements_log` ( \n`ID` bigint(20) DEFAULT NULL,\n`Code` varchar(4000) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 22:28:22',NULL),(471,'DROP TABLE IF EXISTS cs_499_tcms.maintenancepart_log; \nCREATE TABLE `cs_499_tcms`.`maintenancepart_log` ( \n`MaintenancePartID` int(11) DEFAULT NULL,\n`Quantity` int(11) DEFAULT NULL,\n`MaintenanceRecordID` int(11) DEFAULT NULL,\n`PartID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 22:28:22',NULL),(472,'DROP TABLE IF EXISTS cs_499_tcms.maintenancerecord_log; \nCREATE TABLE `cs_499_tcms`.`maintenancerecord_log` ( \n`MaintenanceID` int(11) DEFAULT NULL,\n`VehicleID` int(11) DEFAULT NULL,\n`MaintenanceDate` date DEFAULT NULL,\n`MaintenanceDescription` varchar(20) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 22:28:22',NULL),(473,'DROP TABLE IF EXISTS cs_499_tcms.maintenancerecorddetails_log; \nCREATE TABLE `cs_499_tcms`.`maintenancerecorddetails_log` ( \n`DetailID` int(11) DEFAULT NULL,\n`MaintenanceID` int(11) DEFAULT NULL,\n`EmployeeID` int(11) DEFAULT NULL,\n`RepairDescription` varchar(20) DEFAULT NULL,\n`RepairDate` date DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 22:28:22',NULL),(474,'DROP TABLE IF EXISTS cs_499_tcms.manifest_log; \nCREATE TABLE `cs_499_tcms`.`manifest_log` ( \n`ManifestID` int(11) DEFAULT NULL,\n`ShipmentType` varchar(11) DEFAULT NULL,\n`VehicleID` int(11) DEFAULT NULL,\n`DepartureTime` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`ETA` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`Arrived` tinyint(20) DEFAULT NULL,\n`ShippingCost` double DEFAULT NULL,\n`EmployeeID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 22:28:22',NULL),(475,'DROP TABLE IF EXISTS cs_499_tcms.parts_log; \nCREATE TABLE `cs_499_tcms`.`parts_log` ( \n`PartID` int(11) DEFAULT NULL,\n`PartDescription` varchar(20) DEFAULT NULL,\n`PartNumber` int(11) DEFAULT NULL,\n`PartPrice` double DEFAULT NULL,\n`PartWeight` int(11) DEFAULT NULL,\n`QuantityInStock` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 22:28:22',NULL),(476,'DROP TABLE IF EXISTS cs_499_tcms.payroll_log; \nCREATE TABLE `cs_499_tcms`.`payroll_log` ( \n`PayrollID` int(11) DEFAULT NULL,\n`EmployeeID` int(11) DEFAULT NULL,\n`PaymentDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`Payment` double DEFAULT NULL,\n`HoursWorked` double DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 22:28:22',NULL),(477,'DROP TABLE IF EXISTS cs_499_tcms.purchaseitems_log; \nCREATE TABLE `cs_499_tcms`.`purchaseitems_log` ( \n`ItemID` int(11) DEFAULT NULL,\n`OrderID` int(11) DEFAULT NULL,\n`Quantity` int(11) DEFAULT NULL,\n`PartID` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 22:28:22',NULL),(478,'DROP TABLE IF EXISTS cs_499_tcms.purchaseorder_log; \nCREATE TABLE `cs_499_tcms`.`purchaseorder_log` ( \n`OrderID` int(11) DEFAULT NULL,\n`OrderNumber` int(11) DEFAULT NULL,\n`SourceID` int(11) DEFAULT NULL,\n`DestinationID` int(11) DEFAULT NULL,\n`ManifestID` int(11) DEFAULT NULL,\n`PaymentMade` tinyint(4) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 22:28:22',NULL),(479,'DROP TABLE IF EXISTS cs_499_tcms.user_log; \nCREATE TABLE `cs_499_tcms`.`user_log` ( \n`EmployeeID` int(10) DEFAULT NULL,\n`UserName` varchar(20) DEFAULT NULL,\n`FirstName` varchar(20) DEFAULT NULL,\n`MiddleName` varchar(20) DEFAULT NULL,\n`LastName` varchar(20) DEFAULT NULL,\n`Address` varchar(20) DEFAULT NULL,\n`City` varchar(20) DEFAULT NULL,\n`State` varchar(20) DEFAULT NULL,\n`ZipCode` int(5) DEFAULT NULL,\n`HomePhone` varchar(10) DEFAULT NULL,\n`CellPhone` varchar(10) DEFAULT NULL,\n`EmailAddress` varchar(20) DEFAULT NULL,\n`PayRate` double DEFAULT NULL,\n`EmploymentDate` date DEFAULT NULL,\n`AccessLevel` int(11) DEFAULT NULL,\n`HomeStore` varchar(20) DEFAULT NULL,\n`JobDescription` varchar(20) DEFAULT NULL,\n`IsActive` tinyint(1) DEFAULT NULL,\n`HashKey` varchar(2000) DEFAULT NULL,\n`Passphrase` varchar(2000) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 22:28:22',NULL),(480,'DROP TABLE IF EXISTS cs_499_tcms.vehicle_log; \nCREATE TABLE `cs_499_tcms`.`vehicle_log` ( \n`VehicleID` int(11) DEFAULT NULL,\n`Brand` varchar(20) DEFAULT NULL,\n`Year` year(4) DEFAULT NULL,\n`Model` varchar(20) DEFAULT NULL,\n`VehicleType` int(20) DEFAULT NULL,\n`Capacity` int(11) DEFAULT NULL,\n`CreatedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`CreatedBy` varchar(20) DEFAULT NULL,\n`LastModifiedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`LastModifiedBy` varchar(20) DEFAULT NULL,\n`Version` int(11) DEFAULT NULL,\n`ModifiedStatus` varchar(1) DEFAULT NULL,\n`DeletedDate` timestamp NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n`DeletedBy` varchar(20) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;','D','2017-03-26 22:28:22',NULL),(481,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bd; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bd` BEFORE DELETE ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \nINSERT INTO businesspartners_log \n( \nCompanyID,\nCompanyName,\nAddress,\nCity,\nState,\nZipCode,\nPhoneNumber,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.CompanyID,\nOLD.CompanyName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.PhoneNumber,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(482,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bi; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bi` BEFORE INSERT ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-04-03 22:16:11',NULL),(483,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bu; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bu` BEFORE UPDATE ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO businesspartners_log \n( \nCompanyID,\nCompanyName,\nAddress,\nCity,\nState,\nZipCode,\nPhoneNumber,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.CompanyID,\nOLD.CompanyName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.PhoneNumber,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(484,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bd; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bd` BEFORE DELETE ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \nINSERT INTO createdstatements_log \n( \nID,\nCode,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ID,\nOLD.Code,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(485,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bi; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bi` BEFORE INSERT ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-04-03 22:16:11',NULL),(486,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bu; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bu` BEFORE UPDATE ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO createdstatements_log \n( \nID,\nCode,\nModifiedStatus \n) \nVALUES \n( \nOLD.ID,\nOLD.Code,\n\'U\'\n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(487,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bd` BEFORE DELETE ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \nINSERT INTO maintenancepart_log \n( \nMaintenancePartID,\nQuantity,\nMaintenanceRecordID,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.MaintenancePartID,\nOLD.Quantity,\nOLD.MaintenanceRecordID,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(488,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bi` BEFORE INSERT ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-04-03 22:16:11',NULL),(489,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bu` BEFORE UPDATE ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancepart_log \n( \nMaintenancePartID,\nQuantity,\nMaintenanceRecordID,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.MaintenancePartID,\nOLD.Quantity,\nOLD.MaintenanceRecordID,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(490,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bd` BEFORE DELETE ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \nINSERT INTO maintenancerecord_log \n( \nMaintenanceID,\nVehicleID,\nMaintenanceDate,\nMaintenanceDescription,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.MaintenanceID,\nOLD.VehicleID,\nOLD.MaintenanceDate,\nOLD.MaintenanceDescription,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(491,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bi` BEFORE INSERT ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-04-03 22:16:11',NULL),(492,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bu` BEFORE UPDATE ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancerecord_log \n( \nMaintenanceID,\nVehicleID,\nMaintenanceDate,\nMaintenanceDescription,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.MaintenanceID,\nOLD.VehicleID,\nOLD.MaintenanceDate,\nOLD.MaintenanceDescription,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(493,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bd` BEFORE DELETE ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \nINSERT INTO maintenancerecorddetails_log \n( \nDetailID,\nMaintenanceID,\nEmployeeID,\nRepairDescription,\nRepairDate,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.DetailID,\nOLD.MaintenanceID,\nOLD.EmployeeID,\nOLD.RepairDescription,\nOLD.RepairDate,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(494,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bi` BEFORE INSERT ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-04-03 22:16:11',NULL),(495,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bu` BEFORE UPDATE ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancerecorddetails_log \n( \nDetailID,\nMaintenanceID,\nEmployeeID,\nRepairDescription,\nRepairDate,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.DetailID,\nOLD.MaintenanceID,\nOLD.EmployeeID,\nOLD.RepairDescription,\nOLD.RepairDate,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(496,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bd; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bd` BEFORE DELETE ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \nINSERT INTO manifest_log \n( \nManifestID,\nShipmentType,\nVehicleID,\nDepartureTime,\nETA,\nArrived,\nShippingCost,\nEmployeeID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ManifestID,\nOLD.ShipmentType,\nOLD.VehicleID,\nOLD.DepartureTime,\nOLD.ETA,\nOLD.Arrived,\nOLD.ShippingCost,\nOLD.EmployeeID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(497,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bi; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bi` BEFORE INSERT ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-04-03 22:16:11',NULL),(498,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bu; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bu` BEFORE UPDATE ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO manifest_log \n( \nManifestID,\nShipmentType,\nVehicleID,\nDepartureTime,\nETA,\nArrived,\nShippingCost,\nEmployeeID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.ManifestID,\nOLD.ShipmentType,\nOLD.VehicleID,\nOLD.DepartureTime,\nOLD.ETA,\nOLD.Arrived,\nOLD.ShippingCost,\nOLD.EmployeeID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(499,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bd; \nCREATE TRIGGER `cs_499_tcms`.`parts_bd` BEFORE DELETE ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \nINSERT INTO parts_log \n( \nPartID,\nPartDescription,\nPartNumber,\nPartPrice,\nPartWeight,\nQuantityInStock,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.PartID,\nOLD.PartDescription,\nOLD.PartNumber,\nOLD.PartPrice,\nOLD.PartWeight,\nOLD.QuantityInStock,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(500,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bi; \nCREATE TRIGGER `cs_499_tcms`.`parts_bi` BEFORE INSERT ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-04-03 22:16:11',NULL),(501,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bu; \nCREATE TRIGGER `cs_499_tcms`.`parts_bu` BEFORE UPDATE ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO parts_log \n( \nPartID,\nPartDescription,\nPartNumber,\nPartPrice,\nPartWeight,\nQuantityInStock,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.PartID,\nOLD.PartDescription,\nOLD.PartNumber,\nOLD.PartPrice,\nOLD.PartWeight,\nOLD.QuantityInStock,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(502,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bd; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bd` BEFORE DELETE ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \nINSERT INTO payroll_log \n( \nPayrollID,\nEmployeeID,\nPaymentDate,\nPayment,\nHoursWorked,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.PayrollID,\nOLD.EmployeeID,\nOLD.PaymentDate,\nOLD.Payment,\nOLD.HoursWorked,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(503,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bi; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bi` BEFORE INSERT ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-04-03 22:16:11',NULL),(504,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bu; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bu` BEFORE UPDATE ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO payroll_log \n( \nPayrollID,\nEmployeeID,\nPaymentDate,\nPayment,\nHoursWorked,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.PayrollID,\nOLD.EmployeeID,\nOLD.PaymentDate,\nOLD.Payment,\nOLD.HoursWorked,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(505,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bd; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bd` BEFORE DELETE ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \nINSERT INTO purchaseitems_log \n( \nItemID,\nOrderID,\nQuantity,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ItemID,\nOLD.OrderID,\nOLD.Quantity,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(506,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bi; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bi` BEFORE INSERT ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-04-03 22:16:11',NULL),(507,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bu; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bu` BEFORE UPDATE ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO purchaseitems_log \n( \nItemID,\nOrderID,\nQuantity,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.ItemID,\nOLD.OrderID,\nOLD.Quantity,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(508,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bd; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bd` BEFORE DELETE ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \nINSERT INTO purchaseorder_log \n( \nOrderID,\nOrderNumber,\nSourceID,\nDestinationID,\nManifestID,\nPaymentMade,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.OrderID,\nOLD.OrderNumber,\nOLD.SourceID,\nOLD.DestinationID,\nOLD.ManifestID,\nOLD.PaymentMade,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(509,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bi; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bi` BEFORE INSERT ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-04-03 22:16:11',NULL),(510,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bu; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bu` BEFORE UPDATE ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO purchaseorder_log \n( \nOrderID,\nOrderNumber,\nSourceID,\nDestinationID,\nManifestID,\nPaymentMade,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.OrderID,\nOLD.OrderNumber,\nOLD.SourceID,\nOLD.DestinationID,\nOLD.ManifestID,\nOLD.PaymentMade,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(511,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bd; \nCREATE TRIGGER `cs_499_tcms`.`user_bd` BEFORE DELETE ON cs_499_tcms.user FOR EACH ROW \nBEGIN \nINSERT INTO user_log \n( \nEmployeeID,\nUserName,\nFirstName,\nMiddleName,\nLastName,\nAddress,\nCity,\nState,\nZipCode,\nHomePhone,\nCellPhone,\nEmailAddress,\nPayRate,\nEmploymentDate,\nAccessLevel,\nHomeStore,\nJobDescription,\nIsActive,\nHashKey,\nPassphrase,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.EmployeeID,\nOLD.UserName,\nOLD.FirstName,\nOLD.MiddleName,\nOLD.LastName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.HomePhone,\nOLD.CellPhone,\nOLD.EmailAddress,\nOLD.PayRate,\nOLD.EmploymentDate,\nOLD.AccessLevel,\nOLD.HomeStore,\nOLD.JobDescription,\nOLD.IsActive,\nOLD.HashKey,\nOLD.Passphrase,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(512,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bi; \nCREATE TRIGGER `cs_499_tcms`.`user_bi` BEFORE INSERT ON cs_499_tcms.user FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-04-03 22:16:11',NULL),(513,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bu; \nCREATE TRIGGER `cs_499_tcms`.`user_bu` BEFORE UPDATE ON cs_499_tcms.user FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO user_log \n( \nEmployeeID,\nUserName,\nFirstName,\nMiddleName,\nLastName,\nAddress,\nCity,\nState,\nZipCode,\nHomePhone,\nCellPhone,\nEmailAddress,\nPayRate,\nEmploymentDate,\nAccessLevel,\nHomeStore,\nJobDescription,\nIsActive,\nHashKey,\nPassphrase,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.EmployeeID,\nOLD.UserName,\nOLD.FirstName,\nOLD.MiddleName,\nOLD.LastName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.HomePhone,\nOLD.CellPhone,\nOLD.EmailAddress,\nOLD.PayRate,\nOLD.EmploymentDate,\nOLD.AccessLevel,\nOLD.HomeStore,\nOLD.JobDescription,\nOLD.IsActive,\nOLD.HashKey,\nOLD.Passphrase,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(514,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bd; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bd` BEFORE DELETE ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \nINSERT INTO vehicle_log \n( \nVehicleID,\nBrand,\nYear,\nModel,\nVehicleType,\nCapacity,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.VehicleID,\nOLD.Brand,\nOLD.Year,\nOLD.Model,\nOLD.VehicleType,\nOLD.Capacity,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;','D','2017-04-03 22:16:11',NULL),(515,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bi; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bi` BEFORE INSERT ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;','D','2017-04-03 22:16:11',NULL),(516,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bu; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bu` BEFORE UPDATE ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO vehicle_log \n( \nVehicleID,\nBrand,\nYear,\nModel,\nVehicleType,\nCapacity,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.VehicleID,\nOLD.Brand,\nOLD.Year,\nOLD.Model,\nOLD.VehicleType,\nOLD.Capacity,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;','D','2017-04-03 22:16:11',NULL);
/*!40000 ALTER TABLE `createdstatements_log` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-04-14  2:15:28
