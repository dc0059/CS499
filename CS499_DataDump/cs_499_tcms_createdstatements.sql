CREATE DATABASE  IF NOT EXISTS `cs_499_tcms` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `cs_499_tcms`;
-- MySQL dump 10.13  Distrib 5.7.17, for Win64 (x86_64)
--
-- Host: localhost    Database: cs_499_tcms
-- ------------------------------------------------------
-- Server version	5.7.17-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `createdstatements`
--

DROP TABLE IF EXISTS `createdstatements`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `createdstatements` (
  `ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `Code` varchar(4000) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=553 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `createdstatements`
--

LOCK TABLES `createdstatements` WRITE;
/*!40000 ALTER TABLE `createdstatements` DISABLE KEYS */;
INSERT INTO `createdstatements` VALUES (517,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bd; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bd` BEFORE DELETE ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \nINSERT INTO businesspartners_log \n( \nCompanyID,\nCompanyName,\nAddress,\nCity,\nState,\nZipCode,\nPhoneNumber,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.CompanyID,\nOLD.CompanyName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.PhoneNumber,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;'),(518,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bi; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bi` BEFORE INSERT ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;'),(519,'DROP TRIGGER IF EXISTS cs_499_tcms.businesspartners_bu; \nCREATE TRIGGER `cs_499_tcms`.`businesspartners_bu` BEFORE UPDATE ON cs_499_tcms.businesspartners FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO businesspartners_log \n( \nCompanyID,\nCompanyName,\nAddress,\nCity,\nState,\nZipCode,\nPhoneNumber,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.CompanyID,\nOLD.CompanyName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.PhoneNumber,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;'),(520,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bd; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bd` BEFORE DELETE ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \nINSERT INTO createdstatements_log \n( \nID,\nCode,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ID,\nOLD.Code,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;'),(521,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bi; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bi` BEFORE INSERT ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;'),(522,'DROP TRIGGER IF EXISTS cs_499_tcms.createdstatements_bu; \nCREATE TRIGGER `cs_499_tcms`.`createdstatements_bu` BEFORE UPDATE ON cs_499_tcms.createdstatements FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO createdstatements_log \n( \nID,\nCode,\nModifiedStatus \n) \nVALUES \n( \nOLD.ID,\nOLD.Code,\n\'U\'\n); \n \nEND;'),(523,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bd` BEFORE DELETE ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \nINSERT INTO maintenancepart_log \n( \nMaintenancePartID,\nQuantity,\nMaintenanceRecordID,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.MaintenancePartID,\nOLD.Quantity,\nOLD.MaintenanceRecordID,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;'),(524,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bi` BEFORE INSERT ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;'),(525,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancepart_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancepart_bu` BEFORE UPDATE ON cs_499_tcms.maintenancepart FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancepart_log \n( \nMaintenancePartID,\nQuantity,\nMaintenanceRecordID,\nPartID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.MaintenancePartID,\nOLD.Quantity,\nOLD.MaintenanceRecordID,\nOLD.PartID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;'),(526,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bd` BEFORE DELETE ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \nINSERT INTO maintenancerecord_log \n( \nMaintenanceID,\nVehicleID,\nMaintenanceDate,\nMaintenanceDescription,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.MaintenanceID,\nOLD.VehicleID,\nOLD.MaintenanceDate,\nOLD.MaintenanceDescription,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;'),(527,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bi` BEFORE INSERT ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;'),(528,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecord_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecord_bu` BEFORE UPDATE ON cs_499_tcms.maintenancerecord FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancerecord_log \n( \nMaintenanceID,\nVehicleID,\nMaintenanceDate,\nMaintenanceDescription,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.MaintenanceID,\nOLD.VehicleID,\nOLD.MaintenanceDate,\nOLD.MaintenanceDescription,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;'),(529,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bd; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bd` BEFORE DELETE ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \nINSERT INTO maintenancerecorddetails_log \n( \nDetailID,\nMaintenanceID,\nEmployeeID,\nRepairDescription,\nRepairDate,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.DetailID,\nOLD.MaintenanceID,\nOLD.EmployeeID,\nOLD.RepairDescription,\nOLD.RepairDate,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;'),(530,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bi; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bi` BEFORE INSERT ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;'),(531,'DROP TRIGGER IF EXISTS cs_499_tcms.maintenancerecorddetails_bu; \nCREATE TRIGGER `cs_499_tcms`.`maintenancerecorddetails_bu` BEFORE UPDATE ON cs_499_tcms.maintenancerecorddetails FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO maintenancerecorddetails_log \n( \nDetailID,\nMaintenanceID,\nEmployeeID,\nRepairDescription,\nRepairDate,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.DetailID,\nOLD.MaintenanceID,\nOLD.EmployeeID,\nOLD.RepairDescription,\nOLD.RepairDate,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;'),(532,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bd; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bd` BEFORE DELETE ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \nINSERT INTO manifest_log \n( \nManifestID,\nShipmentType,\nVehicleID,\nDepartureTime,\nETA,\nArrived,\nShippingCost,\nEmployeeID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ManifestID,\nOLD.ShipmentType,\nOLD.VehicleID,\nOLD.DepartureTime,\nOLD.ETA,\nOLD.Arrived,\nOLD.ShippingCost,\nOLD.EmployeeID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;'),(533,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bi; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bi` BEFORE INSERT ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;'),(534,'DROP TRIGGER IF EXISTS cs_499_tcms.manifest_bu; \nCREATE TRIGGER `cs_499_tcms`.`manifest_bu` BEFORE UPDATE ON cs_499_tcms.manifest FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO manifest_log \n( \nManifestID,\nShipmentType,\nVehicleID,\nDepartureTime,\nETA,\nArrived,\nShippingCost,\nEmployeeID,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.ManifestID,\nOLD.ShipmentType,\nOLD.VehicleID,\nOLD.DepartureTime,\nOLD.ETA,\nOLD.Arrived,\nOLD.ShippingCost,\nOLD.EmployeeID,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;'),(535,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bd; \nCREATE TRIGGER `cs_499_tcms`.`parts_bd` BEFORE DELETE ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \nINSERT INTO parts_log \n( \nPartID,\nPartDescription,\nPartNumber,\nPartPrice,\nPartWeight,\nQuantityInStock,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.PartID,\nOLD.PartDescription,\nOLD.PartNumber,\nOLD.PartPrice,\nOLD.PartWeight,\nOLD.QuantityInStock,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;'),(536,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bi; \nCREATE TRIGGER `cs_499_tcms`.`parts_bi` BEFORE INSERT ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;'),(537,'DROP TRIGGER IF EXISTS cs_499_tcms.parts_bu; \nCREATE TRIGGER `cs_499_tcms`.`parts_bu` BEFORE UPDATE ON cs_499_tcms.parts FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO parts_log \n( \nPartID,\nPartDescription,\nPartNumber,\nPartPrice,\nPartWeight,\nQuantityInStock,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.PartID,\nOLD.PartDescription,\nOLD.PartNumber,\nOLD.PartPrice,\nOLD.PartWeight,\nOLD.QuantityInStock,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;'),(538,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bd; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bd` BEFORE DELETE ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \nINSERT INTO payroll_log \n( \nPayrollID,\nEmployeeID,\nPaymentDate,\nPayment,\nHoursWorked,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.PayrollID,\nOLD.EmployeeID,\nOLD.PaymentDate,\nOLD.Payment,\nOLD.HoursWorked,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;'),(539,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bi; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bi` BEFORE INSERT ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;'),(540,'DROP TRIGGER IF EXISTS cs_499_tcms.payroll_bu; \nCREATE TRIGGER `cs_499_tcms`.`payroll_bu` BEFORE UPDATE ON cs_499_tcms.payroll FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO payroll_log \n( \nPayrollID,\nEmployeeID,\nPaymentDate,\nPayment,\nHoursWorked,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.PayrollID,\nOLD.EmployeeID,\nOLD.PaymentDate,\nOLD.Payment,\nOLD.HoursWorked,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;'),(541,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bd; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bd` BEFORE DELETE ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \nINSERT INTO purchaseitems_log \n( \nItemID,\nOrderID,\nQuantity,\nPartID,\nPartStatus,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.ItemID,\nOLD.OrderID,\nOLD.Quantity,\nOLD.PartID,\nOLD.PartStatus,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;'),(542,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bi; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bi` BEFORE INSERT ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;'),(543,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseitems_bu; \nCREATE TRIGGER `cs_499_tcms`.`purchaseitems_bu` BEFORE UPDATE ON cs_499_tcms.purchaseitems FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO purchaseitems_log \n( \nItemID,\nOrderID,\nQuantity,\nPartID,\nPartStatus,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.ItemID,\nOLD.OrderID,\nOLD.Quantity,\nOLD.PartID,\nOLD.PartStatus,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;'),(544,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bd; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bd` BEFORE DELETE ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \nINSERT INTO purchaseorder_log \n( \nOrderID,\nOrderNumber,\nSourceID,\nDestinationID,\nManifestID,\nPaymentMade,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.OrderID,\nOLD.OrderNumber,\nOLD.SourceID,\nOLD.DestinationID,\nOLD.ManifestID,\nOLD.PaymentMade,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;'),(545,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bi; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bi` BEFORE INSERT ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;'),(546,'DROP TRIGGER IF EXISTS cs_499_tcms.purchaseorder_bu; \nCREATE TRIGGER `cs_499_tcms`.`purchaseorder_bu` BEFORE UPDATE ON cs_499_tcms.purchaseorder FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO purchaseorder_log \n( \nOrderID,\nOrderNumber,\nSourceID,\nDestinationID,\nManifestID,\nPaymentMade,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.OrderID,\nOLD.OrderNumber,\nOLD.SourceID,\nOLD.DestinationID,\nOLD.ManifestID,\nOLD.PaymentMade,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;'),(547,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bd; \nCREATE TRIGGER `cs_499_tcms`.`user_bd` BEFORE DELETE ON cs_499_tcms.user FOR EACH ROW \nBEGIN \nINSERT INTO user_log \n( \nEmployeeID,\nUserName,\nFirstName,\nMiddleName,\nLastName,\nAddress,\nCity,\nState,\nZipCode,\nHomePhone,\nCellPhone,\nEmailAddress,\nPayRate,\nEmploymentDate,\nAccessLevel,\nHomeStore,\nJobDescription,\nIsActive,\nHashKey,\nPassphrase,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.EmployeeID,\nOLD.UserName,\nOLD.FirstName,\nOLD.MiddleName,\nOLD.LastName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.HomePhone,\nOLD.CellPhone,\nOLD.EmailAddress,\nOLD.PayRate,\nOLD.EmploymentDate,\nOLD.AccessLevel,\nOLD.HomeStore,\nOLD.JobDescription,\nOLD.IsActive,\nOLD.HashKey,\nOLD.Passphrase,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;'),(548,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bi; \nCREATE TRIGGER `cs_499_tcms`.`user_bi` BEFORE INSERT ON cs_499_tcms.user FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;'),(549,'DROP TRIGGER IF EXISTS cs_499_tcms.user_bu; \nCREATE TRIGGER `cs_499_tcms`.`user_bu` BEFORE UPDATE ON cs_499_tcms.user FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO user_log \n( \nEmployeeID,\nUserName,\nFirstName,\nMiddleName,\nLastName,\nAddress,\nCity,\nState,\nZipCode,\nHomePhone,\nCellPhone,\nEmailAddress,\nPayRate,\nEmploymentDate,\nAccessLevel,\nHomeStore,\nJobDescription,\nIsActive,\nHashKey,\nPassphrase,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.EmployeeID,\nOLD.UserName,\nOLD.FirstName,\nOLD.MiddleName,\nOLD.LastName,\nOLD.Address,\nOLD.City,\nOLD.State,\nOLD.ZipCode,\nOLD.HomePhone,\nOLD.CellPhone,\nOLD.EmailAddress,\nOLD.PayRate,\nOLD.EmploymentDate,\nOLD.AccessLevel,\nOLD.HomeStore,\nOLD.JobDescription,\nOLD.IsActive,\nOLD.HashKey,\nOLD.Passphrase,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;'),(550,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bd; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bd` BEFORE DELETE ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \nINSERT INTO vehicle_log \n( \nVehicleID,\nBrand,\nYear,\nModel,\nVehicleType,\nCapacity,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus,\nDeletedDate \n) \nVALUES \n( \nOLD.VehicleID,\nOLD.Brand,\nOLD.Year,\nOLD.Model,\nOLD.VehicleType,\nOLD.Capacity,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'D\',\nCURRENT_TIMESTAMP \n); \n \nEND;'),(551,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bi; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bi` BEFORE INSERT ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \n \nSET NEW.CREATEDDATE = CURRENT_TIMESTAMP; \nSET NEW.VERSION = 1; \n \nEND;'),(552,'DROP TRIGGER IF EXISTS cs_499_tcms.vehicle_bu; \nCREATE TRIGGER `cs_499_tcms`.`vehicle_bu` BEFORE UPDATE ON cs_499_tcms.vehicle FOR EACH ROW \nBEGIN \n \nSET NEW.VERSION = OLD.VERSION + 1; \nSET NEW.LASTMODIFIEDDATE = CURRENT_TIMESTAMP; \n \nINSERT INTO vehicle_log \n( \nVehicleID,\nBrand,\nYear,\nModel,\nVehicleType,\nCapacity,\nCreatedDate,\nCreatedBy,\nLastModifiedDate,\nLastModifiedBy,\nVersion,\nModifiedStatus \n) \nVALUES \n( \nOLD.VehicleID,\nOLD.Brand,\nOLD.Year,\nOLD.Model,\nOLD.VehicleType,\nOLD.Capacity,\nOLD.CreatedDate,\nOLD.CreatedBy,\nOLD.LastModifiedDate,\nOLD.LastModifiedBy,\nOLD.Version,\n\'U\'\n); \n \nEND;');
/*!40000 ALTER TABLE `createdstatements` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`cs499`@`%`*/ /*!50003 TRIGGER `cs_499_tcms`.`createdstatements_bd` BEFORE DELETE ON cs_499_tcms.createdstatements FOR EACH ROW 
BEGIN 
INSERT INTO createdstatements_log 
( 
ID,
Code,
ModifiedStatus,
DeletedDate 
) 
VALUES 
( 
OLD.ID,
OLD.Code,
'D',
CURRENT_TIMESTAMP 
); 
 
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-04-14  2:15:29
