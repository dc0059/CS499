<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:local="clr-namespace:CS499.TCMS.View.Converters"
                    xmlns:vm="clr-namespace:CS499.TCMS.View.ViewModels"
                    xmlns:vw="clr-namespace:CS499.TCMS.View.Views" 
                    xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock" 
                    xmlns:Controls="clr-namespace:Xceed.Wpf.AvalonDock.Themes.Controls;assembly=Xceed.Wpf.AvalonDock.Themes.Expression">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Icons.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- converters -->
    <local:StringToCanvasConverter x:Key="StringToCanvasConverter"/>
    <local:EnumToStringConverter x:Key="EnumToStringConverter"/>
    <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <local:StringToTimeSpanConverter x:Key="StringToTimeSpanConverter"/>
    <local:VisibilityToBoolConverter x:Key="VisibilityToBoolConverter"/>
    <local:StringToPhoneConverter x:Key="StringToPhoneConverter"/>

    <!-- Command button style-->
    <SolidColorBrush x:Key="BackgroundHighlighted" Color="#66007ACC"/>
    <SolidColorBrush x:Key="BackgroundSelected" Color="#007ACC"/>

    <!-- Command Templates -->
    <Style x:Key="CommandFlatButtonStyle"
           TargetType="{x:Type Button}">

        <Setter Property="Background"
                Value="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}}"/>
        <Setter Property="Foreground"
                Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}}"/>
        <Setter Property="FontSize"
                Value="{Binding FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}}"/>
        <Setter Property="BorderThickness"
                Value="0"/>
        <Setter Property="Margin"
                Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border SnapsToDevicePixels="True"
                            BorderThickness="0"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <iconPacks:PackIconModern x:Name="icon"
                                                      Kind="{Binding Icon}"
                                                      Height="42"
                                                      Width="42"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Grid.Column="0"
                                                      Margin="10"/>
                            <ContentPresenter Grid.Column="1"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              Margin="0, 0, 20, 0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource BackgroundHighlighted}"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource BackgroundSelected}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Icon}"
                                     Value="{x:Null}">
                            <Setter TargetName="icon" 
                                    Property="Width" 
                                    Value="0"/>
                            <Setter TargetName="icon"
                                    Property="Height"
                                    Value="25"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="0">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Command="{Binding Command}"
                            Content="{Binding DisplayName}"
                            ToolTip="{Binding DisplayToolTip}"                                 
                            Style="{StaticResource CommandFlatButtonStyle}"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Vertical"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </DataTemplate>

    <!-- theme templates-->
    <Style TargetType="{x:Type ComboBox}" 
           x:Key="ThemeTypeBaseStyle"
           BasedOn="{StaticResource MetroComboBox}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="{Binding Name}"
                                   Grid.Column="1"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                        <Rectangle Width="20" 
                                   Height="20"
                                   Stroke="{Binding BorderColorBrush, Mode=OneWay}"
                                   Fill="{Binding ColorBrush, Mode=OneWay}"
                                   Grid.Column="0"
                                   Margin="5"/>

                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}" 
           x:Key="ThemeTypeAccentStyle"
           BasedOn="{StaticResource MetroComboBox}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="{Binding Name}"
                                   Grid.Column="1"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                        <Rectangle Width="20" 
                                   Height="20"
                                   Fill="{Binding ColorBrush, Mode=OneWay}"
                                   Grid.Column="0"
                                   Margin="5"/>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type vm:AllUserViewModel}">
        <vw:AllUserView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:UserViewModel}">
        <vw:UserView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:AllBusinessPartnerViewModel}">
        <vw:AllBusinessPartnerView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:BusinessPartnerViewModel}">
        <vw:BusinessPartnerView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:AllPayrollViewModel}">
        <vw:AllPayrollView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:PayrollViewModel}">
        <vw:PayrollView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:UserThemeViewModel}">
        <vw:UserThemeView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:AssemblyInformationViewModel}">
        <vw:AssemblyInformationView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:AppSettingsViewModel}">
        <vw:AppSettingView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:AllVehicleViewModel}">
        <vw:AllVehicleView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:VehicleViewModel}">
        <vw:VehicleView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:AllPartViewModel}">
        <vw:AllPartView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:PartViewModel}">
        <vw:PartView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:AllManifestViewModel}">
        <vw:AllManifestView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:ManifestViewModel}">
        <vw:ManifestView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:AllPurchaseOrderViewModel}">
        <vw:AllPurchaseOrderView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:PurchaseOrderViewModel}">
        <vw:PurchaseOrderView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:AllPurchaseItemViewModel}">
        <vw:AllPurchaseItemView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:PurchaseItemViewModel}">
        <vw:PurchaseItemView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:AllMaintenanceRecordViewModel}">
        <vw:AllMaintenanceRecordView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:MaintenanceRecordViewModel}">
        <vw:MaintenanceRecordView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:AllMaintenanceRecordDetailViewModel}">
        <vw:AllMaintenanceRecordDetailView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:MaintenanceRecordDetailViewModel}">
        <vw:MaintenanceRecordDetailView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:AllMaintenancePartViewModel}">
        <vw:AllMaintenancePartView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:MaintenancePartViewModel}">
        <vw:MaintenancePartView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:DashboardViewModel}">
        <vw:DashboardView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:MyInfoViewModel}">
        <vw:MyInfoView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:MyManifestViewModel}">
        <vw:MyManifestView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:ReportViewModel}">
        <vw:ReportView />
    </DataTemplate>

</ResourceDictionary>